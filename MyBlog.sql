-- phpMyAdmin SQL Dump
-- version 4.4.15.6
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: 2017-05-05 14:25:54
-- 服务器版本： 5.5.48-log
-- PHP Version: 7.1.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `MyBlog`
--

-- --------------------------------------------------------

--
-- 表的结构 `blog_article`
--

CREATE TABLE IF NOT EXISTS `blog_article` (
  `ID` int(11) NOT NULL,
  `TITLE` text NOT NULL,
  `PUBLISH_DATE` int(11) NOT NULL,
  `PUBLISH_TIME` int(11) NOT NULL,
  `VIEW_TIME` int(11) NOT NULL DEFAULT '0',
  `ARTICLE` text NOT NULL
) ENGINE=InnoDB AUTO_INCREMENT=28 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `blog_article`
--

INSERT INTO `blog_article` (`ID`, `TITLE`, `PUBLISH_DATE`, `PUBLISH_TIME`, `VIEW_TIME`, `ARTICLE`) VALUES
(1, '维基百科', 20170101, 165555, 0, '<p><b>维基百科</b>（<span class="LangWithName">英语：<span lang="en">Wikipedia</span></span>，<span class="nowrap"><span class="noexcerpt">><sup><span class="IPA" style="color:#00e;font:bold 80% sans-serif;padding:0 .1em"><a href="/wiki/File:En-uk-Wikipedia.ogg" title="File:En-uk-Wikipedia.ogg">i</a></span></sup></span><span class="IPA nopopups"><a href="/wiki/Help:%E8%8B%B1%E8%AA%9E%E5%9C%8B%E9%9A%9B%E9%9F%B3%E6%A8%99" title="Help:英语国际音标">/<span style="border-bottom:1px dotted"><span title="/ˌ/ 后面为次重音">ˌ</span><span title="“wind”的“w”音">w</span><span title="/ɪ/ “bid”的短“i”音">ɪ</span><span title="“kind”的“k”音">k</span><span title="/ɪ/ 或 /ə/ “roses”的“e”音">ᵻ</span><span title="/ˈ/ 后面为主重音">ˈ</span><span title="“pie”的“p”音">p</span><span title="/iː/ “seed”的长“e”音">iː</span><span title="“dye”的“d”音">d</span><span title="/i/ “happy”的“y”音">i</span><span title="/ə/ “about”的“a”音">ə</span></span>/</a></span></span> 或 <span class="nowrap"><span class="noexcerpt"><sup><span class="IPA" style="color:#00e;font:bold 80% sans-serif;padding:0 .1em"><a href="/wiki/File:En-us-Wikipedia.ogg" title="File:En-us-Wikipedia.ogg">i</a></span></sup></span><span class="IPA nopopups"><a href="/wiki/Help:%E8%8B%B1%E8%AA%9E%E5%9C%8B%E9%9A%9B%E9%9F%B3%E6%A8%99" title="Help:英语国际音标">/<span style="border-bottom:1px dotted"><span title="/ˌ/ 后面为次重音">ˌ</span><span title="“wind”的“w”音">w</span><span title="/ɪ/ “bid”的短“i”音">ɪ</span><span title="“kind”的“k”音">k</span><span title="/i/ “happy”的“y”音">i</span><span title="/ˈ/ 后面为主重音">ˈ</span><span title="“pie”的“p”音">p</span><span title="/iː/ “seed”的长“e”音">iː</span><span title="“dye”的“d”音">d</span><span title="/i/ “happy”的“y”音">i</span><span title="/ə/ “about”的“a”音">ə</span></span>/</a></span></span>），是一个自由的<a href="/wiki/%E7%BD%91%E7%BB%9C%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6" title="网络百科全书">网络百科全书</a>，在一般情况下容许用户编辑其任何条目<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[4]</a></sup>。它是网络上最大型及最受大众欢迎的<a href="/wiki/%E5%B7%A5%E5%85%B7%E4%B9%A6" title="工具书">参考工具书</a><sup id="cite_ref-Woodson_5-0" class="reference"><a href="#cite_note-Woodson-5">[5]</a></sup><sup id="cite_ref-Tancer_6-0" class="reference"><a href="#cite_note-Tancer-6">[6]</a></sup><sup id="cite_ref-7" class="reference"><a href="#cite_note-7">[7]</a></sup>，并已列入十大最受欢迎的网站<sup id="cite_ref-Alexa_siteinfo_8-0" class="reference"><a href="#cite_note-Alexa_siteinfo-8">[8]</a></sup>。当前维基百科是由<a href="/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94" title="非营利组织">非营利组织</a><a href="/wiki/%E7%B6%AD%E5%9F%BA%E5%AA%92%E9%AB%94%E5%9F%BA%E9%87%91%E6%9C%83" class="mw-redirect" title="维基媒体基金会">维基媒体基金会</a>负责营运<sup id="cite_ref-9" class="reference"><a href="#cite_note-9">[9]</a></sup><sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[10]</a></sup><sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[11]</a></sup>。维基百科一字取自于本网站核心技术“Wiki”以及具有百科全书之意的“encyclopedia”共同创造出来的新混成词“Wikipedia”。 </p><!--MORE--><h2><span class="mw-headline" id=".E6.A6.82.E8.BF.B0">概述</span></h2><p>最早是在<a href="/wiki/%E5%90%89%E7%B1%B3%C2%B7%E5%A8%81%E7%88%BE%E6%96%AF" title="吉米·威尔士">吉米·威尔士</a>与<a href="/wiki/%E6%8B%89%E9%87%8C%C2%B7%E6%A1%91%E6%A0%BC" title="拉里·桑格">拉里·桑格</a>两人的合作下，在2001年1月13日于<a href="/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF" class="mw-redirect" title="互联网">互联网</a>上推出<a href="/wiki/%E7%B6%B2%E7%AB%99" title="网站">网站</a>服务，并在1月15日正式展开网络百科全书的项目<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[12]</a></sup>。其中桑格同时结合了维基百科网站合作核心的“<a href="/wiki/Wiki" title="Wiki">Wiki</a>”以及具有百科全书之意的“<a href="/wiki/Encyclopedia" class="mw-redirect" title="Encyclopedia">encyclopedia</a>”，而创造出新的<a href="/wiki/%E6%B7%B7%E6%88%90%E8%A9%9E" title="混成词">混成词</a>“Wikipedia”。创立之初，维基百科的目标是向全人类提供<a href="/wiki/%E8%87%AA%E7%94%B1" title="自由">自由</a>的百科全书，并希望各地民众能够使用自己选择的语言来参与编辑条目。其他书面印刷的百科全书多是由专家主导编辑，之后再由印刷厂商印刷之后加以销售；维基百科在性质上一如其号称般属于可自由<a href="/wiki/Help:%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91" title="Help:如何访问维基百科">访问</a>和<a href="/wiki/Help:%E7%BC%96%E8%BE%91%E9%A1%B5%E9%9D%A2" title="Help:编辑页面">编辑</a>的全球<a href="/wiki/%E7%9F%A5%E8%AD%98" class="mw-redirect" title="知识">知识</a>体，这也意味着除了传统百科全书所收录的信息外，维基百科也能够收录非学术内容、但是仍具有一定媒体关注度的动态事件。2006年《<a href="/wiki/%E6%99%82%E4%BB%A3_(%E9%9B%9C%E8%AA%8C)" title="时代 (杂志)">时代</a>》杂志所评选的<a href="/wiki/%E6%99%82%E4%BB%A3%E5%B9%B4%E5%BA%A6%E9%A2%A8%E9%9B%B2%E4%BA%BA%E7%89%A9" title="时代年度风云人物">时代年度风云人物</a>“<a href="/wiki/%E4%BD%A0_(%E6%97%B6%E4%BB%A3%E5%B9%B4%E5%BA%A6%E9%A3%8E%E4%BA%91%E4%BA%BA%E7%89%A9)" title="你 (时代年度风云人物)">你</a>”中，便提到数以百万来自世界各地的人于在线以共同协作并交互的方式促进维基百科的快速成长，同一年提及的其他重要网站还包括有<a href="/wiki/YouTube" title="YouTube">YouTube</a>、<a href="/wiki/MySpace" class="mw-redirect" title="MySpace">MySpace</a>和<a href="/wiki/Facebook" title="Facebook">Facebook</a><sup id="cite_ref-13" class="reference"><a href="#cite_note-13">[13]</a></sup>。</p><p>维基百科强调<a href="/wiki/Copyleft" title="Copyleft">Copyleft</a><a href="/wiki/%E8%87%AA%E7%94%B1%E5%85%A7%E5%AE%B9" title="自由内容">自由内容</a>、<a href="/wiki/%E5%8D%8F%E5%90%8C%E7%BC%96%E8%BE%91" title="协同编辑">协同编辑</a>（<span lang="en">Collaborative Editing</span>）以及<a href="/wiki/%E5%A4%9A%E8%AA%9E" class="mw-redirect" title="多语">多语言</a>版本的<a href="/wiki/%E7%B6%B2%E7%B5%A1%E7%99%BE%E7%A7%91%E5%85%A8%E6%9B%B8" class="mw-redirect" title="网络百科全书">网络百科全书</a>，并以<a href="/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF" class="mw-redirect" title="互联网">互联网</a>作为媒介而扩展成为一项基于<a href="/wiki/Wiki" title="Wiki">Wiki</a>技术发展的<a href="/wiki/%E4%B8%96%E7%95%8C" title="世界">世界性</a>百科全书协作计划，并由<a href="/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94" title="非营利组织">非营利</a>性质的<a href="/wiki/%E7%B6%AD%E5%9F%BA%E5%AA%92%E9%AB%94%E5%9F%BA%E9%87%91%E6%9C%83" class="mw-redirect" title="维基媒体基金会">维基媒体基金会</a>负责相关的发展事宜。维基百科是由来自世界各地的<a href="/wiki/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E7%A4%BE%E7%BE%A4" class="mw-redirect" title="维基百科社区">志愿者</a>合作编辑而成，整个项目总共收录了超过3,000万篇<a href="/wiki/Wikipedia:%E4%BB%80%E9%BA%BC%E6%98%AF%E6%A2%9D%E7%9B%AE" class="mw-redirect" title="Wikipedia:什么是条目">条目</a>，而其中<a href="/wiki/%E8%8B%B1%E8%AA%9E%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91" class="mw-redirect" title="英语维基百科">英语维基百科</a>以超过450万篇条目在数量上排名第一。维基百科允许任何访问网站的用户使用<a href="/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8" class="mw-redirect" title="网页浏览器">网页浏览器</a>自由阅览和修改绝大部标签页面的内容<sup id="cite_ref-14" class="reference"><a href="#cite_note-14">[14]</a></sup>，根据统计在维基百科上大约有35,000,000名登记注册用户<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[15]</a></sup>，其中有100,000名积极贡献者长期参与编辑工作<sup id="cite_ref-16" class="reference"><a href="#cite_note-16">[16]</a></sup>，而整个网站的总编辑次数更是超过10亿次之多<sup id="cite_ref-17" class="reference"><a href="#cite_note-17">[17]</a></sup><sup id="cite_ref-18" class="reference"><a href="#cite_note-18">[18]</a></sup>。截至2012年8月为止维基百科整个项目总共有285种各自独立运作的<a href="/wiki/Wikipedia:%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91%E8%AA%9E%E8%A8%80%E5%88%97%E8%A1%A8" class="mw-redirect" title="Wikipedia:维基百科语言列表">语言版本</a>，且已经被普遍认为是成规模最大且最为流行的网络<a href="/wiki/%E5%B7%A5%E5%85%B7%E4%B9%A6" title="工具书">工具书</a>，<a href="/wiki/%E7%99%BE%E7%A7%91" class="mw-redirect" title="百科">百科</a><sup id="cite_ref-Alexa_Internet_19-0" class="reference"><a href="#cite_note-Alexa_Internet-19">[19]</a></sup><sup id="cite_ref-20" class="reference"><a href="#cite_note-20">[20]</a></sup><sup id="cite_ref-21" class="reference"><a href="#cite_note-21">[21]</a></sup><sup id="cite_ref-22" class="reference"><a href="#cite_note-22">[22]</a></sup><sup id="cite_ref-23" class="reference"><a href="#cite_note-23">[23]</a></sup>。根据知名的<a href="/wiki/Alexa_Internet" title="Alexa Internet">Alexa Internet</a>其网络流量统计数字指出全世界总共有近3.65亿名民众使用维基百科，且维基百科也是全球浏览人数排名第六高的网站（最高纪录是排名在第五名位置），同时也是全世界最大的无<a href="/wiki/%E5%BB%A3%E5%91%8A" title="广告">广告</a>网站<sup id="cite_ref-Alexa_Internet_19-1" class="reference"><a href="#cite_note-Alexa_Internet-19">[19]</a></sup><sup id="cite_ref-Top_Sites_24-0" class="reference"><a href="#cite_note-Top_Sites-24">[24]</a></sup><sup id="cite_ref-.E6.96.AF.E5.9C.96.E7.88.BE.E7.89.B9.C2.B7.E9.9F.8B.E6.96.AF_25-0" class="reference"><a href="#cite_note-.E6.96.AF.E5.9C.96.E7.88.BE.E7.89.B9.C2.B7.E9.9F.8B.E6.96.AF-25">[25]</a></sup>。根据估计，维基百科每个月便有将近2.7亿的<a href="/wiki/%E7%BE%8E%E5%9C%8B" class="mw-redirect" title="美国">美国</a>人民前往该网站浏览<sup id="cite_ref-.E4.BA.A8.E7.89.B9.C2.B7.E6.B2.83.E5.85.8B_26-0" class="reference"><a href="#cite_note-.E4.BA.A8.E7.89.B9.C2.B7.E6.B2.83.E5.85.8B-26">[26]</a></sup>。</p><p>由于维基百科能够十分迅速整理出与最近发生事件相关的信息并且任何人都能够深入整理数据内容，使得许多人也渐渐将维基百科视为一个新闻来源<sup id="cite_ref-27" class="reference"><a href="#cite_note-27">[27]</a></sup><sup id="cite_ref-28" class="reference"><a href="#cite_note-28">[28]</a></sup>。同时为了方便一般学生或者浏览群众能够简单了解条目的内容，维基百科绝大多数的文章都会尽可能以简单的话语来解释困难的概念<sup id="cite_ref-Legal_Education_Review_29-0" class="reference"><a href="#cite_note-Legal_Education_Review-29">[29]</a></sup>。随着维基百科在社会上的普及，也陆陆续续促成了包括<a href="/wiki/%E7%B6%AD%E5%9F%BA%E6%96%B0%E8%81%9E" class="mw-redirect" title="维基新闻">维基新闻</a>、<a href="/wiki/%E7%B6%AD%E5%9F%BA%E6%95%99%E7%A7%91%E6%9B%B8" title="维基教科书">维基教科书</a>等其它姐妹项目的产生。然而尽管维基百科在其官方政策上坚决拥护<a href="/wiki/Wikipedia:%E5%8F%AF%E4%BE%9B%E6%9F%A5%E8%AD%89" title="Wikipedia:可供查证">可供查证</a>以及<a href="/wiki/Wikipedia:%E4%B8%AD%E7%AB%8B%E7%9A%84%E8%A7%80%E9%BB%9E" class="mw-redirect" title="Wikipedia:中立的观点">中立观点</a>这两项要求，维基百科仍然因为任何人都能够加入编辑的特性受到社会许多人士的批评，其中又以编辑条目的质量、信息提供的准确度、呈现态度的客观性以及无法提供一致的准确内容为多<sup id="cite_ref-30" class="reference"><a href="#cite_note-30">[30]</a></sup>。另外一部分人士指称问题在于维基百科采用了Wiki技术，这使得他们认为任何人都可以编辑维基百科内容的作法本身就是维基百科最大且无法改变的缺点<sup id="cite_ref-31" class="reference"><a href="#cite_note-31">[31]</a></sup>，在这般情况下破坏者能够轻易在易引起争纷的政治和宗教条目中添加虚构的内容、删除正确的信息或者任意添加自己的偏见<sup id="cite_ref-.E8.93.8B.E4.BC.8A.C2.B7.E6.B2.83.E7.88.BE.E7.89.B9.E6.96.AF_32-0" class="reference"><a href="#cite_note-.E8.93.8B.E4.BC.8A.C2.B7.E6.B2.83.E7.88.BE.E7.89.B9.E6.96.AF-32">[32]</a></sup>。而包括维基百科创始人<a href="/wiki/%E5%90%89%E7%B1%B3%C2%B7%E5%A8%81%E7%88%BE%E6%96%AF" title="吉米·威尔士">吉米·威尔士</a>以及英国牛津大学教授<a href="/w/index.php?title=%E5%96%AC%E7%B4%8D%E6%A3%AE%C2%B7%E9%BD%8A%E7%89%B9%E6%9E%97&amp;action=edit&amp;redlink=1" class="new" title="乔纳森·齐特林（页面不存在）">乔纳森·齐特林</a>（Jonathan Zittrain）等知识分子对于条目准确性的争议，认为在一定程度上是源自于他人对于维基百科的偏见<sup id="cite_ref-33" class="reference"><a href="#cite_note-33">[33]</a></sup><sup id="cite_ref-.E7.BE.8E.E5.9C.8B.E6.AD.B7.E5.8F.B2.E9.9B.9C.E8.AA.8C_34-0" class="reference"><a href="#cite_note-.E7.BE.8E.E5.9C.8B.E6.AD.B7.E5.8F.B2.E9.9B.9C.E8.AA.8C-34">[34]</a></sup><sup id="cite_ref-35" class="reference"><a href="#cite_note-35">[35]</a></sup>。为了尽可能解决各界对于条目质量的质疑，维基百科也陆续提出许多相对应的<a href="/wiki/Wikipedia:%E6%96%B9%E9%87%9D%E8%88%87%E6%8C%87%E5%BC%95" title="Wikipedia:方针与指引">方针与指引</a>来保障文章的质量，同时也希望协同编辑时能够列出足以供他人<a href="/wiki/Wikipedia:%E5%8F%AF%E4%BE%9B%E6%9F%A5%E8%AD%89" title="Wikipedia:可供查证">查证</a>、审核及确认的数据源。然而批评者也提到许多维基百科绝大多数大量信息都是由那些喜欢来自<a href="/wiki/%E6%B5%81%E8%A1%8C%E6%96%87%E5%8C%96" title="流行文化">流行文化</a>等事物的民众编辑自己喜爱的项目而成<sup id="cite_ref-36" class="reference"><a href="#cite_note-36">[36]</a></sup>，但这也意味着在许多情况之下网站十分容易因为各种理由而受到他人<a href="/wiki/%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91%E4%B8%8A%E7%9A%84%E4%BA%BA%E7%82%BA%E7%A0%B4%E5%A3%9E" class="mw-redirect" title="维基百科上的人为破坏">人为破坏</a><sup id="cite_ref-.E4.BA.BA.E5.9B.A0.E8.88.87.E8.A8.88.E7.AE.97.E7.B3.BB.E7.B5.B1.E7.A0.94.E8.A8.8E.E6.9C.83_37-0" class="reference"><a href="#cite_note-.E4.BA.BA.E5.9B.A0.E8.88.87.E8.A8.88.E7.AE.97.E7.B3.BB.E7.B5.B1.E7.A0.94.E8.A8.8E.E6.9C.83-37">[37]</a></sup><sup id="cite_ref-.E8.A8.88.E7.AE.97.E6.A9.9F_.E5.8D.94.E6.9C.83_38-0" class="reference"><a href="#cite_note-.E8.A8.88.E7.AE.97.E6.A9.9F_.E5.8D.94.E6.9C.83-38">[38]</a></sup><sup id="cite_ref-39" class="reference"><a href="#cite_note-39">[39]</a></sup>；同时批评者也指出就算一些报告证实许多文章在遭到<a href="/wiki/%E7%A0%B4%E5%A3%9E" title="破坏">破坏</a>后往往能立即简单地被<a href="/wiki/%E6%9C%80%E8%BF%91%E6%9B%B4%E6%94%B9" class="mw-redirect" title="最近更改">删除</a>，但是维基百科内仍然包含有大量未经证实或者是相互矛盾的信息<sup id="cite_ref-Frank_Ahrens_40-0" class="reference"><a href="#cite_note-Frank_Ahrens-40">[40]</a></sup>。不过《<a href="/wiki/%E8%87%AA%E7%84%B6_(%E6%9C%9F%E5%88%8A)" title="自然 (期刊)">自然</a>》在2005年的调查之中认为维基百科在科学文章这一领域与作为传统百科全书代表的《<a href="/wiki/%E5%A4%A7%E8%8B%B1%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6" title="大英百科全书">大英百科全书</a>》有着相似的精确度，但是两者在内容上都有一定程度上的“严重缺失”<sup id="cite_ref-.E5.90.89.E5.A7.86.C2.B7.E8.B3.88.E7.88.BE.E6.96.AF_41-0" class="reference"><a href="#cite_note-.E5.90.89.E5.A7.86.C2.B7.E8.B3.88.E7.88.BE.E6.96.AF-41">[41]</a></sup><sup id="cite_ref-.E8.8B.B1.E5.9C.8B.E5.BB.A3.E6.92.AD.E5.85.AC.E5.8F.B8_42-0" class="reference"><a href="#cite_note-.E8.8B.B1.E5.9C.8B.E5.BB.A3.E6.92.AD.E5.85.AC.E5.8F.B8-42">[42]</a></sup>。</p>'),
(2, 'JR东海373系电力动车组', 20170107, 165554, 0, '<p>373系是一款属于东海旅客铁道（JR东海）的直流特急型电力动车组系列。</p><!--MORE--><h2><span class="mw-headline" id=".E6.A6.82.E8.A6.81">概要</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=JR%E6%9D%B1%E6%B5%B7373%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;section=1" title="编辑小节：概要">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p><b>373系电力动车组</b>的开发目的是为了要取代使用多年的<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5165%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁165系电力动车组（页面不存在）">165系</a><a href="/w/index.php?title=%E6%80%A5%E8%A1%8C%E5%9E%8B%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="急行型电力动车组（页面不存在）">急行型电力动车组</a><sup id="cite_ref-373B_1-0" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>，为了能够在车辆的运用以及调度上发挥到极致，开发出与<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5185%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁185系电力动车组（页面不存在）">185系电力动车组</a>相同具备了普通列车以及特急列车的综合车型<sup id="cite_ref-373B_1-1" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>。373系由<a href="/wiki/%E6%97%A5%E6%9C%AC%E8%BB%8A%E8%BC%9B%E8%A3%BD%E9%80%A0" title="日本车辆制造">日本车辆制造</a>以及<a href="/wiki/%E6%97%A5%E7%AB%8B" title="日立">日立制作所</a>承造，从1995年8月至1996年1月为止，一共生产了3辆编组14组总共42辆<sup id="cite_ref-373C_2-0" class="reference"><a href="#cite_note-373C-2">[2]</a></sup>。</p><p>1996年获日本<a href="/wiki/%E9%80%9A%E5%95%86%E7%94%A2%E6%A5%AD%E7%9C%81" class="mw-redirect" title="通商产业省">通商产业省</a>（现称<a href="/wiki/%E7%B6%93%E6%BF%9F%E7%94%A2%E6%A5%AD%E7%9C%81" title="经济产业省">经济产业省</a>）选定为“优良设计奖<span id="noteTag-cite_ref-sup"><sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[注 1]</a></sup></span>”（商品设计部门）得奖列车<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[3]</a></sup>。</p><h2><span class="mw-headline" id=".E8.A6.8F.E6.A0.BC.E8.88.87.E6.A7.8B.E9.80.A0">规格与构造</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=JR%E6%9D%B1%E6%B5%B7373%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;section=2" title="编辑小节：规格与构造">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><dl>\r\n<dt>编组体系</dt>\r\n</dl><p>373系从<a href="/wiki/%E6%9D%B1%E4%BA%AC%E7%AB%99" title="东京站">东京</a>方向开始连结编组，分别是驾驶动力车<b>KuMoHa373型</b>（<span lang="ja">クモハ373形</span>）、无动力车<b>SaHa373型</b>（<span lang="ja">サハ373形</span>）以及驾驶无动力车<b>KuHa373型</b>（<span lang="ja">クハ373形</span>）<sup id="cite_ref-373C_2-1" class="reference"><a href="#cite_note-373C-2">[2]</a></sup><span id="noteTag-cite_ref-sup"><sup id="cite_ref-5" class="reference"><a href="#cite_note-5">[注 2]</a></sup></span>，基本上以三辆为一个编组，最多能够连结至九辆。在<a href="/w/index.php?title=%E8%BA%AB%E5%BB%B6%E7%B7%9A&amp;action=edit&amp;redlink=1" class="new" title="身延线（页面不存在）">身延线</a>、<a href="/wiki/%E9%A3%AF%E7%94%B0%E7%B7%9A" title="饭田线">饭田线</a>等地方线路采用三辆编组，373系实施单一等级制，而没有设置<a href="/wiki/%E7%B6%A0%E8%89%B2%E8%BB%8A%E8%BC%9B" class="mw-redirect" title="绿色车辆">绿色车辆</a><sup id="cite_ref-373S_6-0" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>车体</dt>\r\n</dl><p>车体为了达到轻量化的目的，主要构造采用<a href="/wiki/%E4%B8%8D%E9%8F%BD%E9%8B%BC" title="不锈钢">不锈钢</a>制，车头部分采用碳钢制<sup id="cite_ref-373A_7-0" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>，车体的最大长度21.3m。车门的部分采用类似<a href="/wiki/%E9%80%9A%E5%8B%A4%E5%9E%8B%E9%9B%BB%E8%81%AF%E8%BB%8A" class="mw-redirect" title="通勤型电力动车组">通勤型电力动车组</a>的双扇门，车门分布在车厢的两端，而373系是<a href="/wiki/JR" title="JR">JR集团</a>唯一使用双扇门的<a href="/wiki/%E7%89%B9%E6%80%A5" class="mw-redirect" title="特急">特急</a>车辆。由于车门与客室之间没有设置通道门，为了保持车厢内的温度，引进了半自动车门设计，在出入口的部分设置了半自动门按钮<span id="noteTag-cite_ref-sup"><sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[注 3]</a></sup></span><sup id="cite_ref-373S_6-1" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><p>驾驶座正面的驾驶窗采用<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5%E6%B0%A3%E5%8B%9580%E7%B3%BB%E6%9F%B4%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁气动80系柴油动车组（页面不存在）">气动82型柴油动车组</a>相同的全景窗<sup id="cite_ref-373D_9-0" class="reference"><a href="#cite_note-373D-9">[6]</a></sup>，在平面视景能够看见后方得视角，并且能够抑制客室照明的亮光。驾驶室与客室之间采用大型的分隔窗，能够在客室里展望前方的景物。驾驶座各部位的照明以及仪表板采用<a href="/wiki/%E9%9B%BB%E8%87%B4%E7%99%BC%E5%85%89" title="电致发光">电致发光</a>（EL），怀表的位置使用<a href="/wiki/%E7%99%BC%E5%85%89%E4%BA%8C%E6%A5%B5%E9%AB%94" class="mw-redirect" title="发光二极管">发光二极管</a>（LED），<a href="/wiki/%E6%99%82%E5%88%BB%E8%A1%A8" class="mw-redirect" title="时刻表">时刻表</a>的插槽则是使用<a href="/wiki/%E5%86%B7%E9%99%B0%E6%A5%B5%E7%AE%A1" class="mw-redirect" title="冷阴极管">冷阴极管</a><sup id="cite_ref-373S_6-2" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>客室设备</dt>\r\n</dl><p>座椅采用回转式斜倚，以每行2+2的配置方式，座椅之间的间距为970mm。每个座椅的扶手板设置了隐藏折叠式小桌以及烟灰缸<sup id="cite_ref-373A_7-1" class="reference"><a href="#cite_note-373A-7">[5]</a></sup><sup id="cite_ref-373S_6-3" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>，但是伴随着全车禁烟化后烟灰缸全面移除。由于夜间运用时没有关闭室内灯的需求，而没有设置室内灯降光器的装置。</p><p>KuMoHa373型以及SaHa373型的接近车厢尾端连结部分设有容纳四人座的半包厢（<span lang="ja">セミコンパートメント席</span>）<sup id="cite_ref-373S_6-4" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。KuHa373型设有无障碍洗手间、男性专用便盘、洗脸台以及<a href="/wiki/%E7%94%B5%E8%AF%9D%E5%8D%A1" title="电话卡">电话卡</a>式<a href="/wiki/%E5%85%AC%E5%85%B1%E9%9B%BB%E8%A9%B1" title="公共电话">公共电话</a><span id="noteTag-cite_ref-sup"><sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[注 4]</a></sup></span><sup id="cite_ref-373S_6-5" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>机电</dt>\r\n</dl><p>控制装置采用<a href="/wiki/%E6%9D%B1%E8%8A%9D" class="mw-redirect" title="东芝">东芝</a>制<a href="/wiki/%E8%84%88%E8%A1%9D%E5%AF%AC%E5%BA%A6%E8%AA%BF%E8%AE%8A" title="脉冲宽度调变">脉冲宽度调变</a><a href="/wiki/%E8%AE%8A%E9%A0%BB%E5%99%A8" class="mw-redirect" title="变频器">变频器</a>（VVVF），主要变换装置采用<a href="/wiki/%E5%8F%AF%E9%97%9C%E6%96%B7%E6%99%B6%E9%96%98%E7%AE%A1" title="可关断晶闸管">可关断晶闸管</a><a href="/wiki/%E5%8D%8A%E5%B0%8E%E9%AB%94%E8%A3%9D%E7%BD%AE" class="mw-redirect" title="半导体装置">半导体装置</a>（GTO）。主电动机采用C-MT66型（185kW）<a href="/w/index.php?title=%E7%B1%A0%E5%BD%A2%E4%B8%89%E7%9B%B8%E4%BA%A4%E6%B5%81%E6%84%9F%E6%87%89%E9%9B%BB%E5%8B%95%E6%A9%9F&amp;action=edit&amp;redlink=1" class="new" title="笼形三相交流感应电动机（页面不存在）">笼形三相交流感应电动机</a><sup id="cite_ref-373A_7-2" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>。</p><p><a href="/wiki/%E9%9B%86%E9%9B%BB%E5%BC%93" title="受电弓">受电弓</a>，全列车均采用C-PS27A型单臂式受电弓，设置在KuMoHa373型驾驶动力车。令373系列车可以行驶在狭窄隧道众多的身延线，而没有采用过去在净空狭小隧道所使用的“低车顶构造”车辆设计<sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[7]</a></sup>。</p><dl>\r\n<dt>转向架与制动</dt>\r\n</dl><p><a href="/wiki/%E8%BD%89%E5%90%91%E6%9E%B6" title="转向架">转向架</a>采用类似<a href="/wiki/%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5211%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A" class="mw-redirect" title="日本国铁211系电力动车组">211系</a>所使用的DT50系转向架，动力车厢采用C-DT63型转向架<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[8]</a></sup>，而无动力车厢则是采用C-TR248型转向架<sup id="cite_ref-13" class="reference"><a href="#cite_note-13">[9]</a></sup>，两者皆为无枕梁转向架。与DT50系相同的的是，在桶状橡皮弹簧内的轴箱支撑装置采用听诊器型空气弹簧，并采取直接定位方式搭载枕梁。与DT50系转向架不同的是，为了防止车辆产生蛇行而装设了车厢减摆器，以及避免空转在动力车配置了砂箱。</p><p>373系的制动系统，采用<a href="/w/index.php?title=%E9%9B%BB%E5%82%B3%E6%93%8D%E7%B8%B1%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="电传操纵制动（页面不存在）">电传操纵制动</a>、<a href="/w/index.php?title=%E5%86%8D%E7%94%9F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="再生制动（页面不存在）">再生制动</a>以及<a href="/w/index.php?title=%E9%99%90%E9%80%9F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="限速制动（页面不存在）">限速制动</a><sup id="cite_ref-373B_1-2" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>，为了避免在列车数量较少的区间制动失效，而同时设置<a href="/w/index.php?title=%E7%99%BC%E9%9B%BB%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="发电制动（页面不存在）">发电制动</a>。基本制动装置在动力车设置与非动力车分别设置<a href="/w/index.php?title=%E8%B8%8F%E9%9D%A2%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="踏面制动（页面不存在）">踏面制动</a>以及<a href="/w/index.php?title=%E7%A2%9F%E5%BC%8F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="碟式制动（页面不存在）">碟式制动</a><sup id="cite_ref-373A_7-3" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>。</p><dl>\r\n<dt>保安装置</dt>\r\n</dl><p>全列车编组的保安装置采用<a href="/wiki/%E8%87%AA%E5%8B%95%E5%88%97%E8%BB%8A%E5%81%9C%E6%AD%A2%E8%A3%9D%E7%BD%AE" title="自动列车停止装置">ATS</a>-S<small>T</small><sup id="cite_ref-14" class="reference"><a href="#cite_note-14">[10]</a></sup>。在1996年3月的改点时需要服务<a href="/wiki/%E6%9D%B1%E6%97%A5%E6%9C%AC%E6%97%85%E5%AE%A2%E9%90%B5%E9%81%93" title="东日本旅客铁道">东日本旅客铁道</a>（JR东日本）所管辖的路段，因此安装了ATS-P，以对应JR东日本的讯号系统<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[11]</a></sup>。</p><dl>\r\n<dt>车内广播</dt>\r\n</dl><p>在特急列车时车内广播采用自动播报，而在普通列车、快速“月光长良”以及Home Liner的运用时则是列车长人工播报。</p>');
INSERT INTO `blog_article` (`ID`, `TITLE`, `PUBLISH_DATE`, `PUBLISH_TIME`, `VIEW_TIME`, `ARTICLE`) VALUES
(3, 'MySQL字符串函数：字符串截取', 20170107, 124444, 0, '<div id="blog_content" class="blog_content"><p><span style="font-family: Arial, sans-serif, Helvetica, Tahoma; font-size: 14px; line-height: 25px;">\r\n</span></p><p style="padding: 0px; margin: 0px;"><span style="font-size: small;">MySQL 字符串截取函数：left(), right(), substring(), substring_index()。还有 mid(), substr()。其中，mid(), substr() 等价于 substring() 函数，substring() 的功能非常强大和灵活。</span></p><!--MORE--><p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">1. 字符串截取：left(str, length)</span></strong></span></p><pre><span style="font-size: small;">mysql&gt; select left(''sqlstudy.com'', 3);\r\n+-------------------------+\r\n| left(''sqlstudy.com'', 3) |\r\n+-------------------------+\r\n| sql                     |\r\n+-------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">2. 字符串截取：right(str, length)</span></strong></span></p><pre><span style="font-size: small;">mysql&gt; select right(''sqlstudy.com'', 3);\r\n+--------------------------+\r\n| right(''sqlstudy.com'', 3) |\r\n+--------------------------+\r\n| com                      |\r\n+--------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: medium;"><strong>3. 字符串截取：substring(str, pos); substring(str, pos, len)</strong></span></span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.1 从字符串的第 4 个字符位置开始取，直到结束。</span></p><pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', 4);\r\n+------------------------------+\r\n| substring(''sqlstudy.com'', 4) |\r\n+------------------------------+\r\n| study.com                    |\r\n+------------------------------+\r\n</span></pre><p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.2 从字符串的第 4 个字符位置开始取，只取 2 个字符。</span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', 4, 2);\r\n+---------------------------------+\r\n| substring(''sqlstudy.com'', 4, 2) |\r\n+---------------------------------+\r\n| st                              |\r\n+---------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.3 从字符串的第 4 个字符位置（倒数）开始取，直到结束。</span></p><pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', -4);\r\n+-------------------------------+\r\n| substring(''sqlstudy.com'', -4) |\r\n+-------------------------------+\r\n| .com                          |\r\n+-------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.4 从字符串的第 4 个字符位置（倒数）开始取，只取 2 个字符。</span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', -4, 2);\r\n+----------------------------------+\r\n| substring(''sqlstudy.com'', -4, 2) |\r\n+----------------------------------+\r\n| .c                               |\r\n+----------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">我们注意到在函数 substring(str,pos, len)中， pos 可以是负值，但 len 不能取负值。</span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">4. 字符串截取：substring_index(str,delim,count)</span></strong></span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.1 截取第二个 ''.'' 之前的所有字符。</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.'', 2);\r\n+------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.'', 2) |\r\n+------------------------------------------------+\r\n| www.sqlstudy                                   |\r\n+------------------------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.2 截取第二个 ''.'' （倒数）之后的所有字符。</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.'', -2);\r\n+-------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.'', -2) |\r\n+-------------------------------------------------+\r\n| com.cn                                          |\r\n+-------------------------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.3 如果在字符串中找不到 delim 参数指定的值，就返回整个字符串</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.coc'', 1);\r\n+---------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.coc'', 1) |\r\n+---------------------------------------------------+\r\n| www.sqlstudy.com.cn                               |\r\n+---------------------------------------------------+</span></pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n</p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">ASCII(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="">返回字符串</span><span>str</span><span style="">的最左面字符的</span><span>ASCII</span><span style="">代码值。如果</span><span>str</span><span style="">是空字符串，返回</span><span>0</span><span style="">。如果</span><span>str</span><span style="">是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt; text-indent: 10.5pt;"><span style="">如：</span><span>select\r\nASCII(''2'');select ASCII(2); </span><span style="">结果都为</span><span>2</span><span style="">的</span><span>Ascii</span><span style="">码值</span><span> 50<span style="">&nbsp;&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt; text-indent: 10.5pt;"><span style="">如：</span><span>select\r\nASCII(''2'');select ASCII(2); </span><span style="">结果都为</span><span>2</span><span style="">的</span><span>Ascii</span><span style="">码值</span><span> 50<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">CHAR(N,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>CHAR()</span><span style="">将参数解释为整数并且返回由这些整数的</span><span>ASCII</span><span style="">代码字符组成的一个字符串。</span><span>NULL</span><span style="">值被跳过。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCHAR(77,121,83,81,NULL);<span style="">&nbsp; </span></span><span style="">结果为</span><span> MySQ </span><span style="">；</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCHAR(77,121,83,81,NULL);<span style="">&nbsp; </span></span><span style="">结果为</span><span> MySQ </span><span style="">；</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><strong style=""><span style="font-size: 14.0pt;">[color=darkred]CONCAT(str1,str2,...) </span></strong></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp; </span></span><span style="">返回来自于参数连结的字符串。如果任何参数是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。可以有超过</span><span>2</span><span style="">个的参数。一个数字参数被变换为等价的字符串形式。</span><span>\r\n</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(''My'', ''S'', ''QL'');<span style="">&nbsp; </span>//MySQL<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(12.3); //''12.3''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(''My'', ''S'', ''QL'');<span style="">&nbsp; </span>//MySQL</span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(12.3); //''12.3''</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LENGTH(str) </span></strong></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp; </span></span><span style="">计算字符串长度</span>\r\n<span style="">：</span><span>select length(''text'') ;<span style="">&nbsp; </span>//4 </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOCATE(substr,str) </span></strong><strong style=""><span style="">　</span></strong><span> </span></p>\r\n<p class="MsoNormal"><span>POSITION(substr IN str) </span></p>\r\n<p class="MsoNormal"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">第一个出现的位置，如果</span><span>substr</span><span style="">不是在</span><span>str</span><span style="">里面，返回</span><span>0. </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select LOCATE(''bar'', ''foobarbar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.mysql&gt; select LOCATE(''xbar'', ''foobar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>4.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LOCATE(''bar'', ''foobarbar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LOCATE(''xbar'', ''foobar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0</span><span style="">该函数是多字节可靠的</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOCATE(substr,str,pos) </span></strong></p>\r\n<p class="MsoNormal"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">第一个出现的位置，从位置</span><span>pos</span><span style="">开始。如果</span><span>substr</span><span style="">不是在</span><span>str</span><span style="">里面，返回</span><span>0</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal"><span>1.mysql&gt; select LOCATE(''bar'',\r\n''foobarbar'',5);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style=""><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 7<span style="">&nbsp;\r\n</span></span></p>\r\n<p class="MsoNormal"><span>mysql&gt; select LOCATE(''bar'',\r\n''foobarbar'',5);</span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; 7</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">INSTR(str,substr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">中的第一个出现的位置。这与有</span><span>2</span><span style="">个参数形式的</span><span>LOCATE()</span><span style="">相同，除了参数被颠倒。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select INSTR(''foobarbar'', ''bar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.mysql&gt; select INSTR(''xbar'', ''foobar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>4.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSTR(''foobarbar'', ''bar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSTR(''xbar'', ''foobar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0</span><span style="">这函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LPAD(str,len,padstr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，左面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.&lt;PRE class=java name="code"&gt;mysql&gt; select\r\nLPAD(''hi'',4,''??'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; ''??hi''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.\r\n[color=darkred]RPAD(str,len,padstr)[/color] &lt;/PRE&gt;</span><span style="">返回字符串</span><span>str</span><span style="">，右面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> mysql&gt; select\r\nLPAD(''hi'',4,''??'');<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''??hi''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>mysql&gt; select\r\nLPAD(''hi'',4,''??'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''??hi''</span></p>\r\n<p class="MsoNormal"><strong style=""><span style="font-size: 14.0pt;">[color=darkred]RPAD(str,len,padstr)[/color] </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，右面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span><span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RPAD(''hi'',5,''?''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''hi???'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LEFT(str,len) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">的最左面</span><span>len</span><span style="">个字符。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select LEFT(''foobarbar'', 5);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''fooba''</span><span style="">该函数是多字节可靠的。</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LEFT(''foobarbar'', 5);</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''fooba''</span><span style="">该函数是多字节可靠的。</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">RIGHT(str,len) </span></strong></p>\r\n<p class="MsoNormal"><span style="">返回字符串</span><span>str</span><span style="">的最右面</span><span>len</span><span style="">个字符。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select RIGHT(''foobarbar'', 4);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''rbar''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RIGHT(''foobarbar'', 4);</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''rbar''</span></p>\r\n<p class="MsoNormal"><span style="">该函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SUBSTRING(str,pos) </span></strong></p>\r\n<p class="MsoNormal"><span style="">　</span><span> </span></p>\r\n<p class="MsoNormal"><span>SUBSTRING(str FROM pos) </span></p>\r\n<p class="MsoNormal"><span style="">从字符串</span><span>str</span><span style="">的起始位置</span><span>pos</span><span style="">返回一个子串。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING(''Quadratically'',5); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''ratically'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING(''foobarbar'' FROM 4); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SUBSTRING_INDEX(str,delim,count)\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回从字符串</span><span>str</span><span style="">的第</span><span>count</span><span style="">个出现的分隔符</span><span>delim</span><span style="">之后的子串。如果</span><span>count</span><span style="">是正数，返回最后的分隔符到左边</span><span>(</span><span style="">从左边数</span><span>) </span><span style="">的所有字符。如果</span><span>count</span><span style="">是负数，返回最后的分隔符到右边的所有字符</span><span>(</span><span style="">从右边数</span><span>)</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING_INDEX(''www.mysql.com'', ''.'', 2); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''www.mysql'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING_INDEX(''www.mysql.com'', ''.'', -2); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''mysql.com'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LTRIM(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回删除了其前置空格字符的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LTRIM(''<span style="">&nbsp;\r\n</span>barbar''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">RTRIM(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回删除了其拖后空格字符的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RTRIM(''barbar<span style="">&nbsp;&nbsp;\r\n</span>''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">TRIM([[BOTH | LEADING |\r\nTRAILING] [remstr] FROM] str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，其所有</span><span>remstr</span><span style="">前缀或后缀被删除了。如果没有修饰符</span><span>BOTH</span><span style="">、</span><span>LEADING</span><span style="">或</span><span>TRAILING</span><span style="">给出，</span><span>BOTH</span><span style="">被假定。如果</span><span>remstr</span><span style="">没被指定，空格被删除。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(''<span style="">&nbsp;\r\n</span>bar<span style="">&nbsp;&nbsp; </span>''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''bar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(LEADING ''x'' FROM ''xxxbarxxx''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barxxx'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(BOTH ''x'' FROM ''xxxbarxxx''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''bar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(TRAILING ''xyz'' FROM ''barxxyz''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barx'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SOUNDEX(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回</span><span>str</span><span style="">的一个同音字符串。听起来“大致相同”的</span><span>2</span><span style="">个字符串应该有相同的同音字符串。一个“标准”的同音字符串长是</span><span>4</span><span style="">个字符，但是</span><span>SOUNDEX()</span><span style="">函数返回一个任意长的字符串。你可以在结果上使用</span><span>SUBSTRING()</span><span style="">得到一个“标准”的</span> <span style="">同音串。所有非数字字母字符在给定的字符串中被忽略。所有在</span><span>A-Z</span><span style="">之外的字符国际字母被当作元音。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SOUNDEX(''Hello''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''H400'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SOUNDEX(''Quadratically''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''Q36324'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SPACE(N) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回由</span><span>N</span><span style="">个空格字符组成的一个字符串。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SPACE(6); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REPLACE(str,from_str,to_str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，其字符串</span><span>from_str</span><span style="">的所有出现由字符串</span><span>to_str</span><span style="">代替。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REPLACE(''www.mysql.com'', ''w'', ''Ww''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''WwWwWw.mysql.com'' </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REPEAT(str,count) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回由重复</span><span>countTimes</span><span style="">次的字符串</span><span>str</span><span style="">组成的一个字符串。如果</span><span>count &lt;= 0</span><span style="">，返回一个空字符串。如果</span><span>str</span><span style="">或</span><span>count</span><span style="">是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REPEAT(''MySQL'', 3); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''MySQLMySQLMySQL'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REVERSE(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回颠倒字符顺序的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REVERSE(''abc''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''cba'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数对多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">INSERT(str,pos,len,newstr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，在位置</span><span>pos</span><span style="">起始的子串且</span><span>len</span><span style="">个字符长得子串由字符串</span><span>newstr</span><span style="">代替。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSERT(''Quadratic'', 3, 4, ''What''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''QuWhattic'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">ELT(N,str1,str2,str3,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">如果</span><span>N= 1</span><span style="">，返回</span><span>str1</span><span style="">，如果</span><span>N= 2</span><span style="">，返回</span><span>str2</span><span style="">，等等。如果</span><span>N</span><span style="">小于</span><span>1</span><span style="">或大于参数个数，返回</span><span>NULL</span><span style="">。</span><span>ELT()</span><span style="">是</span><span>FIELD()</span><span style="">反运算。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>mysql&gt; select ELT(1, ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''ej'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>mysql&gt; select ELT(4, ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''foo'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">FIELD(str,str1,str2,str3,...)\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回</span><span>str</span><span style="">在</span><span>str1, str2, str3, ...</span><span style="">清单的索引。如果</span><span>str</span><span style="">没找到，返回</span><span>0</span><span style="">。</span><span>FIELD()</span><span style="">是</span><span>ELT()</span><span style="">反运算。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select FIELD(''ej'', ''Hej'', ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 2 </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select FIELD(''fo'', ''Hej'', ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0 </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">FIND_IN_SET(str,strlist) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">如果字符串</span><span>str</span><span style="">在由</span><span>N</span><span style="">子串组成的表</span><span>strlist</span><span style="">之中，返回一个</span><span>1</span><span style="">到</span><span>N</span><span style="">的值。一个字符串表是被“</span><span>,</span><span style="">”分隔的子串组成的一个字符串。如果第一个参数是一个常数字符串并且第二个参数是一种类型为</span><span>SET</span><span style="">的列，</span><span>FIND_IN_SET()</span><span style="">函数被优化而使用位运算！如果</span><span>str</span><span style="">不是在</span><span>strlist</span><span style="">里面或如果</span><span>strlist</span><span style="">是空字符串，返回</span><span>0</span><span style="">。如果任何一个参数是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。如果第一个参数包含一个“</span><span>,</span><span style="">”，该函数将工作不正常。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT FIND_IN_SET(''b'',''a,b,c,d''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 2 </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">MAKE_SET(bits,str1,str2,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回一个集合</span><span> (</span><span style="">包含由“</span><span>,</span><span style="">”字符分隔的子串组成的一个字符串</span><span>)</span><span style="">，由相应的位在</span><span>bits</span><span style="">集合中的的字符串组成。</span><span>str1</span><span style="">对应于位</span><span>0</span><span style="">，</span><span>str2</span><span style="">对应位</span><span>1</span><span style="">，等等。在</span><span>str1, str2, ...</span><span style="">中的</span><span>NULL</span><span style="">串不添加到结果中。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(1,''a'',''b'',''c''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''a'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(1 | 4,''hello'',''nice'',''world''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''hello,world'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(0,''a'',''b'',''c''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; '''' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">EXPORT_SET(bits,on,off,[separator,[number_of_bits]])\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回一个字符串，在这里对于在“</span><span>bits</span><span style="">”中设定每一位，你得到一个“</span><span>on</span><span style="">”字符串，并且对于每个复位</span><span>(reset)</span><span style="">的位，你得到一个“</span><span>off</span><span style="">”字符串。每个字符串用“</span><span>separator</span><span style="">”分隔</span><span>(</span><span style="">缺省“</span><span>,</span><span style="">”</span><span>)</span><span style="">，并且只有“</span><span>bits</span><span style="">”的“</span><span>number_of_bits</span><span style="">”</span><span> (</span><span style="">缺省</span><span>64)</span><span style="">位被使用。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select EXPORT_SET(5,''Y'',''N'','','',4) </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; Y,N,Y,N </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LCASE(str) </span></strong></p>\r\n<p class="MsoNormal"><span style="">　</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>LOWER(str) </span><span style="">返回字符串</span><span>str</span><span style="">，根据当前字符集映射</span><span>(</span><span style="">缺省是</span><span>ISO-8859-1 Latin1)</span><span style="">把所有的字符改变成小写。该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LCASE(''QUADRATICALLY''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''quadratically'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">UCASE(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，根据当前字符集映射</span><span>(</span><span style="">缺省是</span><span>ISO-8859-1 Latin1)</span><span style="">把所有的字符改变成大写。该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select UCASE(''Hej''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''HEJ'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOAD_FILE(file_name) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">读入文件并且作为一个字符串返回文件内容。文件必须在服务器上，你必须指定到文件的完整路径名，而且你必须有</span><span>file</span><span style="">权限。文件必须所有内容都是可读的并且小于</span><span>max_allowed_packet</span><span style="">。如果文件不存在或由于上面原因之一不能被读出，函数返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; UPDATE table_name </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SET\r\nblob_column=LOAD_FILE("/tmp/picture") </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>WHERE id=1; </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span>MySQL</span><span style="">必要时自动变换数字为字符串，并且反过来也如此：</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span>mysql&gt; SELECT 1+"1"; </span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; 2 </span></p>\r\n<p class="MsoNormal"><span>mysql&gt; SELECT CONCAT(2,'' test''); </span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; ''2 test'' </span></p>\r\n<p class="MsoNormal"><span style="">如果你想要明确地变换一个数字到一个字符串，把它作为参数传递到</span><span>CONCAT()</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span style="">如果字符串函数提供一个二进制字符串作为参数，结果字符串也是一个二进制字符串。被变换到一个字符串的数字被当作是一个二进制字符串。这仅影响比较。</span></p>\r\n\r\n  </div>'),
(11, '王小波', 4, 6, 0, '<p><b>王小波</b> （1952年5月13日－1997年4月11日），<a href="/wiki/%E5%8C%97%E4%BA%AC%E4%BA%BA" title="北京人">北京人</a>，中华人民共和国著名作家。年轻时在云南农场作过<a href="/wiki/%E7%9F%A5%E8%AF%86%E9%9D%92%E5%B9%B4" title="知识青年">知青</a>，插过队，做过工人、老师。1978年至1982年在<a href="/wiki/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E5%A4%A7%E5%AD%A6" title="中国人民大学">中国人民大学</a>学习。1984年前往<a href="/wiki/%E7%BE%8E%E5%9B%BD" title="美国">美国</a>留学。1988年获<a href="/wiki/%E5%8C%B9%E5%85%B9%E5%A0%A1%E5%A4%A7%E5%AD%A6" class="mw-redirect" title="匹兹堡大学">匹兹堡大学</a>硕士学位。后任教于<a href="/wiki/%E5%8C%97%E4%BA%AC%E5%A4%A7%E5%AD%A6" title="北京大学">北京大学</a>和<a href="/wiki/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E5%A4%A7%E5%AD%A6" title="中国人民大学">中国人民大学</a>。1992年后开始成为自由撰稿人。1997年4月11日因心脏病突发逝世于北京。</p><!--MORE--><h2><span class="mw-headline" id=".E4.BD.9C.E5.93.81.E9.A3.8E.E6.A0.BC">作品风格</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E7%8E%8B%E5%B0%8F%E6%B3%A2&amp;action=edit&amp;section=2" title="编辑小节：作品风格">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p>王小波在白话文叙述方面有很深的造诣，写作小说的同时他也创作过一些杂文与随笔文章。并且很多人都是由于精彩而睿智的杂文作品接触和认识到王小波。王小波的东西方生活与求学经历，使他成为一个富有自由人文精神和独立知识分子品格的写作者。</p><p>在他的作品中，贯穿着其特有的黑色幽默，这些也表明了王小波对于生命和生活的态度。王小波的一系列小说都以自己所经历过的生活作为蓝本，如下放到<a href="/wiki/%E4%BA%91%E5%8D%97" class="mw-redirect" title="云南">云南</a>的知识青年，在某个医院或高等专科学校从事技术工种的工程师等等，作品的年代背景也与王小波的生活与成长时期相重叠，在这些作品中，他刻画了这样一种现实：“我看到一个无智的世界，但是智慧在混沌中存在；我看到一个无性的世界，但是性爱在混沌中存在；我看到一个无趣的世界，但是有趣在混沌中存在”。</p><p>从杂文作品中看，哲学家<a href="/wiki/%E4%BC%AF%E7%89%B9%E8%98%AD%C2%B7%E7%BE%85%E7%B4%A0" class="mw-redirect" title="伯特兰·罗素">伯特兰·罗素</a>对他思想影响很深，他推崇和提倡科学与理性，并且认为人的生活应该追求未知，他反对进行思想禁锢，主张人们思维应该保持多样化，使生活变得有意思有趣，去热爱智慧。 他的作品在他身后盛行于世，影响了众多青年，特别是二十世纪九十年代的大学生，他们至今还会常常引用王小波作品中的文字，来表明自己的激昂和犀利。其曾编写过电影剧本《东宫西宫》，并由此获得了<a href="/wiki/%E9%98%BF%E6%A0%B9%E5%BB%B7" title="阿根廷">阿根廷</a>国际电影节最佳编剧。</p><h2><span class="mw-headline" id=".E7.8E.8B.E5.B0.8F.E6.B3.A2.E7.8E.B0.E8.B1.A1">王小波现象</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E7%8E%8B%E5%B0%8F%E6%B3%A2&amp;action=edit&amp;section=3" title="编辑小节：王小波现象">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p>王小波生前两获《<a href="/wiki/%E8%81%94%E5%90%88%E6%8A%A5" class="mw-redirect" title="联合报">联合报</a>》中篇小说大奖，在海外华人文学界获得普遍称誉。但当其期望进入内地文坛体制时，却遭到了前所未有的冷遇，甚至出版作品都很困难。王小波在其小说集《黄金时代》的后记中坦承：“本书得以面世，多亏了不屈不挠的意志和积极的生活态度。必须说明，这些优秀的品质并非作者所有。鉴于出版这本书比写这本书困难得多，所以假如本书有些可取之处，当归于所有帮助出版它的朋友们。”</p><p>而1997年王小波遽然逝世，成为了王小波现象的开端。其作品被空前的传播和接受，在民间与知识界都引起巨大反响，作品的发行量至21世纪仍为90年代小说家中的佼佼者。各种形式的王小波纪念会，作品研讨会层出不穷，一时间王小波现象席卷文坛、文艺界与文学批评界。</p><p>王小波现象的爆破点在于其杂文，值得一提的是，其杂文在身前就曾经受到关注。评论界有把王小波热比作<a href="/wiki/%E9%99%88%E5%AF%85%E6%81%AA" title="陈寅恪">陈寅恪</a>热之后，<a href="/wiki/%E8%87%AA%E7%94%B1%E4%B8%BB%E4%B9%89" title="自由主义">自由主义</a>浪潮在中国的第二次博兴。</p><p>关于王小波小说价值的技术性讨论，主流批评界保持了异常的缄默。关于王小波小说价值的讨论，在主流文学批评界一直处于边缘化的地位。可以说，王小波现象的主要焦点在于其杂文以及其所宣扬的自由主义思潮。而其小说在文坛的地位与技术性讨论，仍处于悬而不决的地位。</p>'),
(20, '王小波', 4, 6, 0, '<p><b>王小波</b> （1952年5月13日－1997年4月11日），<a href="/wiki/%E5%8C%97%E4%BA%AC%E4%BA%BA" title="北京人">北京人</a>，中华人民共和国著名作家。年轻时在云南农场作过<a href="/wiki/%E7%9F%A5%E8%AF%86%E9%9D%92%E5%B9%B4" title="知识青年">知青</a>，插过队，做过工人、老师。1978年至1982年在<a href="/wiki/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E5%A4%A7%E5%AD%A6" title="中国人民大学">中国人民大学</a>学习。1984年前往<a href="/wiki/%E7%BE%8E%E5%9B%BD" title="美国">美国</a>留学。1988年获<a href="/wiki/%E5%8C%B9%E5%85%B9%E5%A0%A1%E5%A4%A7%E5%AD%A6" class="mw-redirect" title="匹兹堡大学">匹兹堡大学</a>硕士学位。后任教于<a href="/wiki/%E5%8C%97%E4%BA%AC%E5%A4%A7%E5%AD%A6" title="北京大学">北京大学</a>和<a href="/wiki/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E5%A4%A7%E5%AD%A6" title="中国人民大学">中国人民大学</a>。1992年后开始成为自由撰稿人。1997年4月11日因心脏病突发逝世于北京。</p><!--MORE--><h2><span class="mw-headline" id=".E4.BD.9C.E5.93.81.E9.A3.8E.E6.A0.BC">作品风格</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E7%8E%8B%E5%B0%8F%E6%B3%A2&amp;action=edit&amp;section=2" title="编辑小节：作品风格">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p>王小波在白话文叙述方面有很深的造诣，写作小说的同时他也创作过一些杂文与随笔文章。并且很多人都是由于精彩而睿智的杂文作品接触和认识到王小波。王小波的东西方生活与求学经历，使他成为一个富有自由人文精神和独立知识分子品格的写作者。</p><p>在他的作品中，贯穿着其特有的黑色幽默，这些也表明了王小波对于生命和生活的态度。王小波的一系列小说都以自己所经历过的生活作为蓝本，如下放到<a href="/wiki/%E4%BA%91%E5%8D%97" class="mw-redirect" title="云南">云南</a>的知识青年，在某个医院或高等专科学校从事技术工种的工程师等等，作品的年代背景也与王小波的生活与成长时期相重叠，在这些作品中，他刻画了这样一种现实：“我看到一个无智的世界，但是智慧在混沌中存在；我看到一个无性的世界，但是性爱在混沌中存在；我看到一个无趣的世界，但是有趣在混沌中存在”。</p><p>从杂文作品中看，哲学家<a href="/wiki/%E4%BC%AF%E7%89%B9%E8%98%AD%C2%B7%E7%BE%85%E7%B4%A0" class="mw-redirect" title="伯特兰·罗素">伯特兰·罗素</a>对他思想影响很深，他推崇和提倡科学与理性，并且认为人的生活应该追求未知，他反对进行思想禁锢，主张人们思维应该保持多样化，使生活变得有意思有趣，去热爱智慧。 他的作品在他身后盛行于世，影响了众多青年，特别是二十世纪九十年代的大学生，他们至今还会常常引用王小波作品中的文字，来表明自己的激昂和犀利。其曾编写过电影剧本《东宫西宫》，并由此获得了<a href="/wiki/%E9%98%BF%E6%A0%B9%E5%BB%B7" title="阿根廷">阿根廷</a>国际电影节最佳编剧。</p><h2><span class="mw-headline" id=".E7.8E.8B.E5.B0.8F.E6.B3.A2.E7.8E.B0.E8.B1.A1">王小波现象</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E7%8E%8B%E5%B0%8F%E6%B3%A2&amp;action=edit&amp;section=3" title="编辑小节：王小波现象">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p>王小波生前两获《<a href="/wiki/%E8%81%94%E5%90%88%E6%8A%A5" class="mw-redirect" title="联合报">联合报</a>》中篇小说大奖，在海外华人文学界获得普遍称誉。但当其期望进入内地文坛体制时，却遭到了前所未有的冷遇，甚至出版作品都很困难。王小波在其小说集《黄金时代》的后记中坦承：“本书得以面世，多亏了不屈不挠的意志和积极的生活态度。必须说明，这些优秀的品质并非作者所有。鉴于出版这本书比写这本书困难得多，所以假如本书有些可取之处，当归于所有帮助出版它的朋友们。”</p><p>而1997年王小波遽然逝世，成为了王小波现象的开端。其作品被空前的传播和接受，在民间与知识界都引起巨大反响，作品的发行量至21世纪仍为90年代小说家中的佼佼者。各种形式的王小波纪念会，作品研讨会层出不穷，一时间王小波现象席卷文坛、文艺界与文学批评界。</p><p>王小波现象的爆破点在于其杂文，值得一提的是，其杂文在身前就曾经受到关注。评论界有把王小波热比作<a href="/wiki/%E9%99%88%E5%AF%85%E6%81%AA" title="陈寅恪">陈寅恪</a>热之后，<a href="/wiki/%E8%87%AA%E7%94%B1%E4%B8%BB%E4%B9%89" title="自由主义">自由主义</a>浪潮在中国的第二次博兴。</p><p>关于王小波小说价值的技术性讨论，主流批评界保持了异常的缄默。关于王小波小说价值的讨论，在主流文学批评界一直处于边缘化的地位。可以说，王小波现象的主要焦点在于其杂文以及其所宣扬的自由主义思潮。而其小说在文坛的地位与技术性讨论，仍处于悬而不决的地位。</p>');
INSERT INTO `blog_article` (`ID`, `TITLE`, `PUBLISH_DATE`, `PUBLISH_TIME`, `VIEW_TIME`, `ARTICLE`) VALUES
(21, 'MySQL字符串函数：字符串截取', 20170107, 124444, 0, '<div id="blog_content" class="blog_content"><p><span style="font-family: Arial, sans-serif, Helvetica, Tahoma; font-size: 14px; line-height: 25px;">\r\n</span></p><p style="padding: 0px; margin: 0px;"><span style="font-size: small;">MySQL 字符串截取函数：left(), right(), substring(), substring_index()。还有 mid(), substr()。其中，mid(), substr() 等价于 substring() 函数，substring() 的功能非常强大和灵活。</span></p><!--MORE--><p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">1. 字符串截取：left(str, length)</span></strong></span></p><pre><span style="font-size: small;">mysql&gt; select left(''sqlstudy.com'', 3);\r\n+-------------------------+\r\n| left(''sqlstudy.com'', 3) |\r\n+-------------------------+\r\n| sql                     |\r\n+-------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">2. 字符串截取：right(str, length)</span></strong></span></p><pre><span style="font-size: small;">mysql&gt; select right(''sqlstudy.com'', 3);\r\n+--------------------------+\r\n| right(''sqlstudy.com'', 3) |\r\n+--------------------------+\r\n| com                      |\r\n+--------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: medium;"><strong>3. 字符串截取：substring(str, pos); substring(str, pos, len)</strong></span></span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.1 从字符串的第 4 个字符位置开始取，直到结束。</span></p><pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', 4);\r\n+------------------------------+\r\n| substring(''sqlstudy.com'', 4) |\r\n+------------------------------+\r\n| study.com                    |\r\n+------------------------------+\r\n</span></pre><p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.2 从字符串的第 4 个字符位置开始取，只取 2 个字符。</span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', 4, 2);\r\n+---------------------------------+\r\n| substring(''sqlstudy.com'', 4, 2) |\r\n+---------------------------------+\r\n| st                              |\r\n+---------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.3 从字符串的第 4 个字符位置（倒数）开始取，直到结束。</span></p><pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', -4);\r\n+-------------------------------+\r\n| substring(''sqlstudy.com'', -4) |\r\n+-------------------------------+\r\n| .com                          |\r\n+-------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.4 从字符串的第 4 个字符位置（倒数）开始取，只取 2 个字符。</span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', -4, 2);\r\n+----------------------------------+\r\n| substring(''sqlstudy.com'', -4, 2) |\r\n+----------------------------------+\r\n| .c                               |\r\n+----------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">我们注意到在函数 substring(str,pos, len)中， pos 可以是负值，但 len 不能取负值。</span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">4. 字符串截取：substring_index(str,delim,count)</span></strong></span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.1 截取第二个 ''.'' 之前的所有字符。</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.'', 2);\r\n+------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.'', 2) |\r\n+------------------------------------------------+\r\n| www.sqlstudy                                   |\r\n+------------------------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.2 截取第二个 ''.'' （倒数）之后的所有字符。</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.'', -2);\r\n+-------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.'', -2) |\r\n+-------------------------------------------------+\r\n| com.cn                                          |\r\n+-------------------------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.3 如果在字符串中找不到 delim 参数指定的值，就返回整个字符串</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.coc'', 1);\r\n+---------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.coc'', 1) |\r\n+---------------------------------------------------+\r\n| www.sqlstudy.com.cn                               |\r\n+---------------------------------------------------+</span></pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n</p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">ASCII(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="">返回字符串</span><span>str</span><span style="">的最左面字符的</span><span>ASCII</span><span style="">代码值。如果</span><span>str</span><span style="">是空字符串，返回</span><span>0</span><span style="">。如果</span><span>str</span><span style="">是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt; text-indent: 10.5pt;"><span style="">如：</span><span>select\r\nASCII(''2'');select ASCII(2); </span><span style="">结果都为</span><span>2</span><span style="">的</span><span>Ascii</span><span style="">码值</span><span> 50<span style="">&nbsp;&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt; text-indent: 10.5pt;"><span style="">如：</span><span>select\r\nASCII(''2'');select ASCII(2); </span><span style="">结果都为</span><span>2</span><span style="">的</span><span>Ascii</span><span style="">码值</span><span> 50<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">CHAR(N,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>CHAR()</span><span style="">将参数解释为整数并且返回由这些整数的</span><span>ASCII</span><span style="">代码字符组成的一个字符串。</span><span>NULL</span><span style="">值被跳过。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCHAR(77,121,83,81,NULL);<span style="">&nbsp; </span></span><span style="">结果为</span><span> MySQ </span><span style="">；</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCHAR(77,121,83,81,NULL);<span style="">&nbsp; </span></span><span style="">结果为</span><span> MySQ </span><span style="">；</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><strong style=""><span style="font-size: 14.0pt;">[color=darkred]CONCAT(str1,str2,...) </span></strong></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp; </span></span><span style="">返回来自于参数连结的字符串。如果任何参数是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。可以有超过</span><span>2</span><span style="">个的参数。一个数字参数被变换为等价的字符串形式。</span><span>\r\n</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(''My'', ''S'', ''QL'');<span style="">&nbsp; </span>//MySQL<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(12.3); //''12.3''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(''My'', ''S'', ''QL'');<span style="">&nbsp; </span>//MySQL</span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(12.3); //''12.3''</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LENGTH(str) </span></strong></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp; </span></span><span style="">计算字符串长度</span>\r\n<span style="">：</span><span>select length(''text'') ;<span style="">&nbsp; </span>//4 </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOCATE(substr,str) </span></strong><strong style=""><span style="">　</span></strong><span> </span></p>\r\n<p class="MsoNormal"><span>POSITION(substr IN str) </span></p>\r\n<p class="MsoNormal"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">第一个出现的位置，如果</span><span>substr</span><span style="">不是在</span><span>str</span><span style="">里面，返回</span><span>0. </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select LOCATE(''bar'', ''foobarbar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.mysql&gt; select LOCATE(''xbar'', ''foobar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>4.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LOCATE(''bar'', ''foobarbar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LOCATE(''xbar'', ''foobar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0</span><span style="">该函数是多字节可靠的</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOCATE(substr,str,pos) </span></strong></p>\r\n<p class="MsoNormal"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">第一个出现的位置，从位置</span><span>pos</span><span style="">开始。如果</span><span>substr</span><span style="">不是在</span><span>str</span><span style="">里面，返回</span><span>0</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal"><span>1.mysql&gt; select LOCATE(''bar'',\r\n''foobarbar'',5);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style=""><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 7<span style="">&nbsp;\r\n</span></span></p>\r\n<p class="MsoNormal"><span>mysql&gt; select LOCATE(''bar'',\r\n''foobarbar'',5);</span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; 7</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">INSTR(str,substr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">中的第一个出现的位置。这与有</span><span>2</span><span style="">个参数形式的</span><span>LOCATE()</span><span style="">相同，除了参数被颠倒。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select INSTR(''foobarbar'', ''bar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.mysql&gt; select INSTR(''xbar'', ''foobar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>4.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSTR(''foobarbar'', ''bar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSTR(''xbar'', ''foobar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0</span><span style="">这函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LPAD(str,len,padstr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，左面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.&lt;PRE class=java name="code"&gt;mysql&gt; select\r\nLPAD(''hi'',4,''??'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; ''??hi''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.\r\n[color=darkred]RPAD(str,len,padstr)[/color] &lt;/PRE&gt;</span><span style="">返回字符串</span><span>str</span><span style="">，右面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> mysql&gt; select\r\nLPAD(''hi'',4,''??'');<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''??hi''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>mysql&gt; select\r\nLPAD(''hi'',4,''??'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''??hi''</span></p>\r\n<p class="MsoNormal"><strong style=""><span style="font-size: 14.0pt;">[color=darkred]RPAD(str,len,padstr)[/color] </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，右面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span><span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RPAD(''hi'',5,''?''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''hi???'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LEFT(str,len) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">的最左面</span><span>len</span><span style="">个字符。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select LEFT(''foobarbar'', 5);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''fooba''</span><span style="">该函数是多字节可靠的。</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LEFT(''foobarbar'', 5);</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''fooba''</span><span style="">该函数是多字节可靠的。</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">RIGHT(str,len) </span></strong></p>\r\n<p class="MsoNormal"><span style="">返回字符串</span><span>str</span><span style="">的最右面</span><span>len</span><span style="">个字符。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select RIGHT(''foobarbar'', 4);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''rbar''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RIGHT(''foobarbar'', 4);</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''rbar''</span></p>\r\n<p class="MsoNormal"><span style="">该函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SUBSTRING(str,pos) </span></strong></p>\r\n<p class="MsoNormal"><span style="">　</span><span> </span></p>\r\n<p class="MsoNormal"><span>SUBSTRING(str FROM pos) </span></p>\r\n<p class="MsoNormal"><span style="">从字符串</span><span>str</span><span style="">的起始位置</span><span>pos</span><span style="">返回一个子串。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING(''Quadratically'',5); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''ratically'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING(''foobarbar'' FROM 4); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SUBSTRING_INDEX(str,delim,count)\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回从字符串</span><span>str</span><span style="">的第</span><span>count</span><span style="">个出现的分隔符</span><span>delim</span><span style="">之后的子串。如果</span><span>count</span><span style="">是正数，返回最后的分隔符到左边</span><span>(</span><span style="">从左边数</span><span>) </span><span style="">的所有字符。如果</span><span>count</span><span style="">是负数，返回最后的分隔符到右边的所有字符</span><span>(</span><span style="">从右边数</span><span>)</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING_INDEX(''www.mysql.com'', ''.'', 2); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''www.mysql'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING_INDEX(''www.mysql.com'', ''.'', -2); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''mysql.com'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LTRIM(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回删除了其前置空格字符的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LTRIM(''<span style="">&nbsp;\r\n</span>barbar''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">RTRIM(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回删除了其拖后空格字符的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RTRIM(''barbar<span style="">&nbsp;&nbsp;\r\n</span>''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">TRIM([[BOTH | LEADING |\r\nTRAILING] [remstr] FROM] str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，其所有</span><span>remstr</span><span style="">前缀或后缀被删除了。如果没有修饰符</span><span>BOTH</span><span style="">、</span><span>LEADING</span><span style="">或</span><span>TRAILING</span><span style="">给出，</span><span>BOTH</span><span style="">被假定。如果</span><span>remstr</span><span style="">没被指定，空格被删除。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(''<span style="">&nbsp;\r\n</span>bar<span style="">&nbsp;&nbsp; </span>''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''bar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(LEADING ''x'' FROM ''xxxbarxxx''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barxxx'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(BOTH ''x'' FROM ''xxxbarxxx''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''bar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(TRAILING ''xyz'' FROM ''barxxyz''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barx'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SOUNDEX(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回</span><span>str</span><span style="">的一个同音字符串。听起来“大致相同”的</span><span>2</span><span style="">个字符串应该有相同的同音字符串。一个“标准”的同音字符串长是</span><span>4</span><span style="">个字符，但是</span><span>SOUNDEX()</span><span style="">函数返回一个任意长的字符串。你可以在结果上使用</span><span>SUBSTRING()</span><span style="">得到一个“标准”的</span> <span style="">同音串。所有非数字字母字符在给定的字符串中被忽略。所有在</span><span>A-Z</span><span style="">之外的字符国际字母被当作元音。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SOUNDEX(''Hello''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''H400'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SOUNDEX(''Quadratically''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''Q36324'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SPACE(N) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回由</span><span>N</span><span style="">个空格字符组成的一个字符串。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SPACE(6); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REPLACE(str,from_str,to_str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，其字符串</span><span>from_str</span><span style="">的所有出现由字符串</span><span>to_str</span><span style="">代替。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REPLACE(''www.mysql.com'', ''w'', ''Ww''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''WwWwWw.mysql.com'' </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REPEAT(str,count) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回由重复</span><span>countTimes</span><span style="">次的字符串</span><span>str</span><span style="">组成的一个字符串。如果</span><span>count &lt;= 0</span><span style="">，返回一个空字符串。如果</span><span>str</span><span style="">或</span><span>count</span><span style="">是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REPEAT(''MySQL'', 3); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''MySQLMySQLMySQL'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REVERSE(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回颠倒字符顺序的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REVERSE(''abc''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''cba'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数对多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">INSERT(str,pos,len,newstr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，在位置</span><span>pos</span><span style="">起始的子串且</span><span>len</span><span style="">个字符长得子串由字符串</span><span>newstr</span><span style="">代替。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSERT(''Quadratic'', 3, 4, ''What''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''QuWhattic'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">ELT(N,str1,str2,str3,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">如果</span><span>N= 1</span><span style="">，返回</span><span>str1</span><span style="">，如果</span><span>N= 2</span><span style="">，返回</span><span>str2</span><span style="">，等等。如果</span><span>N</span><span style="">小于</span><span>1</span><span style="">或大于参数个数，返回</span><span>NULL</span><span style="">。</span><span>ELT()</span><span style="">是</span><span>FIELD()</span><span style="">反运算。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>mysql&gt; select ELT(1, ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''ej'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>mysql&gt; select ELT(4, ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''foo'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">FIELD(str,str1,str2,str3,...)\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回</span><span>str</span><span style="">在</span><span>str1, str2, str3, ...</span><span style="">清单的索引。如果</span><span>str</span><span style="">没找到，返回</span><span>0</span><span style="">。</span><span>FIELD()</span><span style="">是</span><span>ELT()</span><span style="">反运算。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select FIELD(''ej'', ''Hej'', ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 2 </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select FIELD(''fo'', ''Hej'', ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0 </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">FIND_IN_SET(str,strlist) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">如果字符串</span><span>str</span><span style="">在由</span><span>N</span><span style="">子串组成的表</span><span>strlist</span><span style="">之中，返回一个</span><span>1</span><span style="">到</span><span>N</span><span style="">的值。一个字符串表是被“</span><span>,</span><span style="">”分隔的子串组成的一个字符串。如果第一个参数是一个常数字符串并且第二个参数是一种类型为</span><span>SET</span><span style="">的列，</span><span>FIND_IN_SET()</span><span style="">函数被优化而使用位运算！如果</span><span>str</span><span style="">不是在</span><span>strlist</span><span style="">里面或如果</span><span>strlist</span><span style="">是空字符串，返回</span><span>0</span><span style="">。如果任何一个参数是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。如果第一个参数包含一个“</span><span>,</span><span style="">”，该函数将工作不正常。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT FIND_IN_SET(''b'',''a,b,c,d''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 2 </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">MAKE_SET(bits,str1,str2,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回一个集合</span><span> (</span><span style="">包含由“</span><span>,</span><span style="">”字符分隔的子串组成的一个字符串</span><span>)</span><span style="">，由相应的位在</span><span>bits</span><span style="">集合中的的字符串组成。</span><span>str1</span><span style="">对应于位</span><span>0</span><span style="">，</span><span>str2</span><span style="">对应位</span><span>1</span><span style="">，等等。在</span><span>str1, str2, ...</span><span style="">中的</span><span>NULL</span><span style="">串不添加到结果中。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(1,''a'',''b'',''c''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''a'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(1 | 4,''hello'',''nice'',''world''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''hello,world'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(0,''a'',''b'',''c''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; '''' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">EXPORT_SET(bits,on,off,[separator,[number_of_bits]])\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回一个字符串，在这里对于在“</span><span>bits</span><span style="">”中设定每一位，你得到一个“</span><span>on</span><span style="">”字符串，并且对于每个复位</span><span>(reset)</span><span style="">的位，你得到一个“</span><span>off</span><span style="">”字符串。每个字符串用“</span><span>separator</span><span style="">”分隔</span><span>(</span><span style="">缺省“</span><span>,</span><span style="">”</span><span>)</span><span style="">，并且只有“</span><span>bits</span><span style="">”的“</span><span>number_of_bits</span><span style="">”</span><span> (</span><span style="">缺省</span><span>64)</span><span style="">位被使用。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select EXPORT_SET(5,''Y'',''N'','','',4) </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; Y,N,Y,N </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LCASE(str) </span></strong></p>\r\n<p class="MsoNormal"><span style="">　</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>LOWER(str) </span><span style="">返回字符串</span><span>str</span><span style="">，根据当前字符集映射</span><span>(</span><span style="">缺省是</span><span>ISO-8859-1 Latin1)</span><span style="">把所有的字符改变成小写。该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LCASE(''QUADRATICALLY''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''quadratically'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">UCASE(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，根据当前字符集映射</span><span>(</span><span style="">缺省是</span><span>ISO-8859-1 Latin1)</span><span style="">把所有的字符改变成大写。该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select UCASE(''Hej''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''HEJ'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOAD_FILE(file_name) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">读入文件并且作为一个字符串返回文件内容。文件必须在服务器上，你必须指定到文件的完整路径名，而且你必须有</span><span>file</span><span style="">权限。文件必须所有内容都是可读的并且小于</span><span>max_allowed_packet</span><span style="">。如果文件不存在或由于上面原因之一不能被读出，函数返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; UPDATE table_name </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SET\r\nblob_column=LOAD_FILE("/tmp/picture") </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>WHERE id=1; </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span>MySQL</span><span style="">必要时自动变换数字为字符串，并且反过来也如此：</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span>mysql&gt; SELECT 1+"1"; </span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; 2 </span></p>\r\n<p class="MsoNormal"><span>mysql&gt; SELECT CONCAT(2,'' test''); </span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; ''2 test'' </span></p>\r\n<p class="MsoNormal"><span style="">如果你想要明确地变换一个数字到一个字符串，把它作为参数传递到</span><span>CONCAT()</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span style="">如果字符串函数提供一个二进制字符串作为参数，结果字符串也是一个二进制字符串。被变换到一个字符串的数字被当作是一个二进制字符串。这仅影响比较。</span></p>\r\n\r\n  </div>'),
(22, 'JR东海373系电力动车组', 20170107, 165554, 0, '<p>373系是一款属于东海旅客铁道（JR东海）的直流特急型电力动车组系列。</p><!--MORE--><h2><span class="mw-headline" id=".E6.A6.82.E8.A6.81">概要</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=JR%E6%9D%B1%E6%B5%B7373%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;section=1" title="编辑小节：概要">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p><b>373系电力动车组</b>的开发目的是为了要取代使用多年的<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5165%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁165系电力动车组（页面不存在）">165系</a><a href="/w/index.php?title=%E6%80%A5%E8%A1%8C%E5%9E%8B%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="急行型电力动车组（页面不存在）">急行型电力动车组</a><sup id="cite_ref-373B_1-0" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>，为了能够在车辆的运用以及调度上发挥到极致，开发出与<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5185%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁185系电力动车组（页面不存在）">185系电力动车组</a>相同具备了普通列车以及特急列车的综合车型<sup id="cite_ref-373B_1-1" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>。373系由<a href="/wiki/%E6%97%A5%E6%9C%AC%E8%BB%8A%E8%BC%9B%E8%A3%BD%E9%80%A0" title="日本车辆制造">日本车辆制造</a>以及<a href="/wiki/%E6%97%A5%E7%AB%8B" title="日立">日立制作所</a>承造，从1995年8月至1996年1月为止，一共生产了3辆编组14组总共42辆<sup id="cite_ref-373C_2-0" class="reference"><a href="#cite_note-373C-2">[2]</a></sup>。</p><p>1996年获日本<a href="/wiki/%E9%80%9A%E5%95%86%E7%94%A2%E6%A5%AD%E7%9C%81" class="mw-redirect" title="通商产业省">通商产业省</a>（现称<a href="/wiki/%E7%B6%93%E6%BF%9F%E7%94%A2%E6%A5%AD%E7%9C%81" title="经济产业省">经济产业省</a>）选定为“优良设计奖<span id="noteTag-cite_ref-sup"><sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[注 1]</a></sup></span>”（商品设计部门）得奖列车<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[3]</a></sup>。</p><h2><span class="mw-headline" id=".E8.A6.8F.E6.A0.BC.E8.88.87.E6.A7.8B.E9.80.A0">规格与构造</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=JR%E6%9D%B1%E6%B5%B7373%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;section=2" title="编辑小节：规格与构造">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><dl>\r\n<dt>编组体系</dt>\r\n</dl><p>373系从<a href="/wiki/%E6%9D%B1%E4%BA%AC%E7%AB%99" title="东京站">东京</a>方向开始连结编组，分别是驾驶动力车<b>KuMoHa373型</b>（<span lang="ja">クモハ373形</span>）、无动力车<b>SaHa373型</b>（<span lang="ja">サハ373形</span>）以及驾驶无动力车<b>KuHa373型</b>（<span lang="ja">クハ373形</span>）<sup id="cite_ref-373C_2-1" class="reference"><a href="#cite_note-373C-2">[2]</a></sup><span id="noteTag-cite_ref-sup"><sup id="cite_ref-5" class="reference"><a href="#cite_note-5">[注 2]</a></sup></span>，基本上以三辆为一个编组，最多能够连结至九辆。在<a href="/w/index.php?title=%E8%BA%AB%E5%BB%B6%E7%B7%9A&amp;action=edit&amp;redlink=1" class="new" title="身延线（页面不存在）">身延线</a>、<a href="/wiki/%E9%A3%AF%E7%94%B0%E7%B7%9A" title="饭田线">饭田线</a>等地方线路采用三辆编组，373系实施单一等级制，而没有设置<a href="/wiki/%E7%B6%A0%E8%89%B2%E8%BB%8A%E8%BC%9B" class="mw-redirect" title="绿色车辆">绿色车辆</a><sup id="cite_ref-373S_6-0" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>车体</dt>\r\n</dl><p>车体为了达到轻量化的目的，主要构造采用<a href="/wiki/%E4%B8%8D%E9%8F%BD%E9%8B%BC" title="不锈钢">不锈钢</a>制，车头部分采用碳钢制<sup id="cite_ref-373A_7-0" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>，车体的最大长度21.3m。车门的部分采用类似<a href="/wiki/%E9%80%9A%E5%8B%A4%E5%9E%8B%E9%9B%BB%E8%81%AF%E8%BB%8A" class="mw-redirect" title="通勤型电力动车组">通勤型电力动车组</a>的双扇门，车门分布在车厢的两端，而373系是<a href="/wiki/JR" title="JR">JR集团</a>唯一使用双扇门的<a href="/wiki/%E7%89%B9%E6%80%A5" class="mw-redirect" title="特急">特急</a>车辆。由于车门与客室之间没有设置通道门，为了保持车厢内的温度，引进了半自动车门设计，在出入口的部分设置了半自动门按钮<span id="noteTag-cite_ref-sup"><sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[注 3]</a></sup></span><sup id="cite_ref-373S_6-1" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><p>驾驶座正面的驾驶窗采用<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5%E6%B0%A3%E5%8B%9580%E7%B3%BB%E6%9F%B4%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁气动80系柴油动车组（页面不存在）">气动82型柴油动车组</a>相同的全景窗<sup id="cite_ref-373D_9-0" class="reference"><a href="#cite_note-373D-9">[6]</a></sup>，在平面视景能够看见后方得视角，并且能够抑制客室照明的亮光。驾驶室与客室之间采用大型的分隔窗，能够在客室里展望前方的景物。驾驶座各部位的照明以及仪表板采用<a href="/wiki/%E9%9B%BB%E8%87%B4%E7%99%BC%E5%85%89" title="电致发光">电致发光</a>（EL），怀表的位置使用<a href="/wiki/%E7%99%BC%E5%85%89%E4%BA%8C%E6%A5%B5%E9%AB%94" class="mw-redirect" title="发光二极管">发光二极管</a>（LED），<a href="/wiki/%E6%99%82%E5%88%BB%E8%A1%A8" class="mw-redirect" title="时刻表">时刻表</a>的插槽则是使用<a href="/wiki/%E5%86%B7%E9%99%B0%E6%A5%B5%E7%AE%A1" class="mw-redirect" title="冷阴极管">冷阴极管</a><sup id="cite_ref-373S_6-2" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>客室设备</dt>\r\n</dl><p>座椅采用回转式斜倚，以每行2+2的配置方式，座椅之间的间距为970mm。每个座椅的扶手板设置了隐藏折叠式小桌以及烟灰缸<sup id="cite_ref-373A_7-1" class="reference"><a href="#cite_note-373A-7">[5]</a></sup><sup id="cite_ref-373S_6-3" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>，但是伴随着全车禁烟化后烟灰缸全面移除。由于夜间运用时没有关闭室内灯的需求，而没有设置室内灯降光器的装置。</p><p>KuMoHa373型以及SaHa373型的接近车厢尾端连结部分设有容纳四人座的半包厢（<span lang="ja">セミコンパートメント席</span>）<sup id="cite_ref-373S_6-4" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。KuHa373型设有无障碍洗手间、男性专用便盘、洗脸台以及<a href="/wiki/%E7%94%B5%E8%AF%9D%E5%8D%A1" title="电话卡">电话卡</a>式<a href="/wiki/%E5%85%AC%E5%85%B1%E9%9B%BB%E8%A9%B1" title="公共电话">公共电话</a><span id="noteTag-cite_ref-sup"><sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[注 4]</a></sup></span><sup id="cite_ref-373S_6-5" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>机电</dt>\r\n</dl><p>控制装置采用<a href="/wiki/%E6%9D%B1%E8%8A%9D" class="mw-redirect" title="东芝">东芝</a>制<a href="/wiki/%E8%84%88%E8%A1%9D%E5%AF%AC%E5%BA%A6%E8%AA%BF%E8%AE%8A" title="脉冲宽度调变">脉冲宽度调变</a><a href="/wiki/%E8%AE%8A%E9%A0%BB%E5%99%A8" class="mw-redirect" title="变频器">变频器</a>（VVVF），主要变换装置采用<a href="/wiki/%E5%8F%AF%E9%97%9C%E6%96%B7%E6%99%B6%E9%96%98%E7%AE%A1" title="可关断晶闸管">可关断晶闸管</a><a href="/wiki/%E5%8D%8A%E5%B0%8E%E9%AB%94%E8%A3%9D%E7%BD%AE" class="mw-redirect" title="半导体装置">半导体装置</a>（GTO）。主电动机采用C-MT66型（185kW）<a href="/w/index.php?title=%E7%B1%A0%E5%BD%A2%E4%B8%89%E7%9B%B8%E4%BA%A4%E6%B5%81%E6%84%9F%E6%87%89%E9%9B%BB%E5%8B%95%E6%A9%9F&amp;action=edit&amp;redlink=1" class="new" title="笼形三相交流感应电动机（页面不存在）">笼形三相交流感应电动机</a><sup id="cite_ref-373A_7-2" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>。</p><p><a href="/wiki/%E9%9B%86%E9%9B%BB%E5%BC%93" title="受电弓">受电弓</a>，全列车均采用C-PS27A型单臂式受电弓，设置在KuMoHa373型驾驶动力车。令373系列车可以行驶在狭窄隧道众多的身延线，而没有采用过去在净空狭小隧道所使用的“低车顶构造”车辆设计<sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[7]</a></sup>。</p><dl>\r\n<dt>转向架与制动</dt>\r\n</dl><p><a href="/wiki/%E8%BD%89%E5%90%91%E6%9E%B6" title="转向架">转向架</a>采用类似<a href="/wiki/%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5211%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A" class="mw-redirect" title="日本国铁211系电力动车组">211系</a>所使用的DT50系转向架，动力车厢采用C-DT63型转向架<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[8]</a></sup>，而无动力车厢则是采用C-TR248型转向架<sup id="cite_ref-13" class="reference"><a href="#cite_note-13">[9]</a></sup>，两者皆为无枕梁转向架。与DT50系相同的的是，在桶状橡皮弹簧内的轴箱支撑装置采用听诊器型空气弹簧，并采取直接定位方式搭载枕梁。与DT50系转向架不同的是，为了防止车辆产生蛇行而装设了车厢减摆器，以及避免空转在动力车配置了砂箱。</p><p>373系的制动系统，采用<a href="/w/index.php?title=%E9%9B%BB%E5%82%B3%E6%93%8D%E7%B8%B1%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="电传操纵制动（页面不存在）">电传操纵制动</a>、<a href="/w/index.php?title=%E5%86%8D%E7%94%9F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="再生制动（页面不存在）">再生制动</a>以及<a href="/w/index.php?title=%E9%99%90%E9%80%9F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="限速制动（页面不存在）">限速制动</a><sup id="cite_ref-373B_1-2" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>，为了避免在列车数量较少的区间制动失效，而同时设置<a href="/w/index.php?title=%E7%99%BC%E9%9B%BB%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="发电制动（页面不存在）">发电制动</a>。基本制动装置在动力车设置与非动力车分别设置<a href="/w/index.php?title=%E8%B8%8F%E9%9D%A2%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="踏面制动（页面不存在）">踏面制动</a>以及<a href="/w/index.php?title=%E7%A2%9F%E5%BC%8F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="碟式制动（页面不存在）">碟式制动</a><sup id="cite_ref-373A_7-3" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>。</p><dl>\r\n<dt>保安装置</dt>\r\n</dl><p>全列车编组的保安装置采用<a href="/wiki/%E8%87%AA%E5%8B%95%E5%88%97%E8%BB%8A%E5%81%9C%E6%AD%A2%E8%A3%9D%E7%BD%AE" title="自动列车停止装置">ATS</a>-S<small>T</small><sup id="cite_ref-14" class="reference"><a href="#cite_note-14">[10]</a></sup>。在1996年3月的改点时需要服务<a href="/wiki/%E6%9D%B1%E6%97%A5%E6%9C%AC%E6%97%85%E5%AE%A2%E9%90%B5%E9%81%93" title="东日本旅客铁道">东日本旅客铁道</a>（JR东日本）所管辖的路段，因此安装了ATS-P，以对应JR东日本的讯号系统<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[11]</a></sup>。</p><dl>\r\n<dt>车内广播</dt>\r\n</dl><p>在特急列车时车内广播采用自动播报，而在普通列车、快速“月光长良”以及Home Liner的运用时则是列车长人工播报。</p>');
INSERT INTO `blog_article` (`ID`, `TITLE`, `PUBLISH_DATE`, `PUBLISH_TIME`, `VIEW_TIME`, `ARTICLE`) VALUES
(23, '维基百科', 20170101, 165555, 0, '<p><b>维基百科</b>（<span class="LangWithName">英语：<span lang="en">Wikipedia</span></span>，<span class="nowrap"><span class="noexcerpt">><sup><span class="IPA" style="color:#00e;font:bold 80% sans-serif;padding:0 .1em"><a href="/wiki/File:En-uk-Wikipedia.ogg" title="File:En-uk-Wikipedia.ogg">i</a></span></sup></span><span class="IPA nopopups"><a href="/wiki/Help:%E8%8B%B1%E8%AA%9E%E5%9C%8B%E9%9A%9B%E9%9F%B3%E6%A8%99" title="Help:英语国际音标">/<span style="border-bottom:1px dotted"><span title="/ˌ/ 后面为次重音">ˌ</span><span title="“wind”的“w”音">w</span><span title="/ɪ/ “bid”的短“i”音">ɪ</span><span title="“kind”的“k”音">k</span><span title="/ɪ/ 或 /ə/ “roses”的“e”音">ᵻ</span><span title="/ˈ/ 后面为主重音">ˈ</span><span title="“pie”的“p”音">p</span><span title="/iː/ “seed”的长“e”音">iː</span><span title="“dye”的“d”音">d</span><span title="/i/ “happy”的“y”音">i</span><span title="/ə/ “about”的“a”音">ə</span></span>/</a></span></span> 或 <span class="nowrap"><span class="noexcerpt"><sup><span class="IPA" style="color:#00e;font:bold 80% sans-serif;padding:0 .1em"><a href="/wiki/File:En-us-Wikipedia.ogg" title="File:En-us-Wikipedia.ogg">i</a></span></sup></span><span class="IPA nopopups"><a href="/wiki/Help:%E8%8B%B1%E8%AA%9E%E5%9C%8B%E9%9A%9B%E9%9F%B3%E6%A8%99" title="Help:英语国际音标">/<span style="border-bottom:1px dotted"><span title="/ˌ/ 后面为次重音">ˌ</span><span title="“wind”的“w”音">w</span><span title="/ɪ/ “bid”的短“i”音">ɪ</span><span title="“kind”的“k”音">k</span><span title="/i/ “happy”的“y”音">i</span><span title="/ˈ/ 后面为主重音">ˈ</span><span title="“pie”的“p”音">p</span><span title="/iː/ “seed”的长“e”音">iː</span><span title="“dye”的“d”音">d</span><span title="/i/ “happy”的“y”音">i</span><span title="/ə/ “about”的“a”音">ə</span></span>/</a></span></span>），是一个自由的<a href="/wiki/%E7%BD%91%E7%BB%9C%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6" title="网络百科全书">网络百科全书</a>，在一般情况下容许用户编辑其任何条目<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[4]</a></sup>。它是网络上最大型及最受大众欢迎的<a href="/wiki/%E5%B7%A5%E5%85%B7%E4%B9%A6" title="工具书">参考工具书</a><sup id="cite_ref-Woodson_5-0" class="reference"><a href="#cite_note-Woodson-5">[5]</a></sup><sup id="cite_ref-Tancer_6-0" class="reference"><a href="#cite_note-Tancer-6">[6]</a></sup><sup id="cite_ref-7" class="reference"><a href="#cite_note-7">[7]</a></sup>，并已列入十大最受欢迎的网站<sup id="cite_ref-Alexa_siteinfo_8-0" class="reference"><a href="#cite_note-Alexa_siteinfo-8">[8]</a></sup>。当前维基百科是由<a href="/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94" title="非营利组织">非营利组织</a><a href="/wiki/%E7%B6%AD%E5%9F%BA%E5%AA%92%E9%AB%94%E5%9F%BA%E9%87%91%E6%9C%83" class="mw-redirect" title="维基媒体基金会">维基媒体基金会</a>负责营运<sup id="cite_ref-9" class="reference"><a href="#cite_note-9">[9]</a></sup><sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[10]</a></sup><sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[11]</a></sup>。维基百科一字取自于本网站核心技术“Wiki”以及具有百科全书之意的“encyclopedia”共同创造出来的新混成词“Wikipedia”。 </p><!--MORE--><h2><span class="mw-headline" id=".E6.A6.82.E8.BF.B0">概述</span></h2><p>最早是在<a href="/wiki/%E5%90%89%E7%B1%B3%C2%B7%E5%A8%81%E7%88%BE%E6%96%AF" title="吉米·威尔士">吉米·威尔士</a>与<a href="/wiki/%E6%8B%89%E9%87%8C%C2%B7%E6%A1%91%E6%A0%BC" title="拉里·桑格">拉里·桑格</a>两人的合作下，在2001年1月13日于<a href="/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF" class="mw-redirect" title="互联网">互联网</a>上推出<a href="/wiki/%E7%B6%B2%E7%AB%99" title="网站">网站</a>服务，并在1月15日正式展开网络百科全书的项目<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[12]</a></sup>。其中桑格同时结合了维基百科网站合作核心的“<a href="/wiki/Wiki" title="Wiki">Wiki</a>”以及具有百科全书之意的“<a href="/wiki/Encyclopedia" class="mw-redirect" title="Encyclopedia">encyclopedia</a>”，而创造出新的<a href="/wiki/%E6%B7%B7%E6%88%90%E8%A9%9E" title="混成词">混成词</a>“Wikipedia”。创立之初，维基百科的目标是向全人类提供<a href="/wiki/%E8%87%AA%E7%94%B1" title="自由">自由</a>的百科全书，并希望各地民众能够使用自己选择的语言来参与编辑条目。其他书面印刷的百科全书多是由专家主导编辑，之后再由印刷厂商印刷之后加以销售；维基百科在性质上一如其号称般属于可自由<a href="/wiki/Help:%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91" title="Help:如何访问维基百科">访问</a>和<a href="/wiki/Help:%E7%BC%96%E8%BE%91%E9%A1%B5%E9%9D%A2" title="Help:编辑页面">编辑</a>的全球<a href="/wiki/%E7%9F%A5%E8%AD%98" class="mw-redirect" title="知识">知识</a>体，这也意味着除了传统百科全书所收录的信息外，维基百科也能够收录非学术内容、但是仍具有一定媒体关注度的动态事件。2006年《<a href="/wiki/%E6%99%82%E4%BB%A3_(%E9%9B%9C%E8%AA%8C)" title="时代 (杂志)">时代</a>》杂志所评选的<a href="/wiki/%E6%99%82%E4%BB%A3%E5%B9%B4%E5%BA%A6%E9%A2%A8%E9%9B%B2%E4%BA%BA%E7%89%A9" title="时代年度风云人物">时代年度风云人物</a>“<a href="/wiki/%E4%BD%A0_(%E6%97%B6%E4%BB%A3%E5%B9%B4%E5%BA%A6%E9%A3%8E%E4%BA%91%E4%BA%BA%E7%89%A9)" title="你 (时代年度风云人物)">你</a>”中，便提到数以百万来自世界各地的人于在线以共同协作并交互的方式促进维基百科的快速成长，同一年提及的其他重要网站还包括有<a href="/wiki/YouTube" title="YouTube">YouTube</a>、<a href="/wiki/MySpace" class="mw-redirect" title="MySpace">MySpace</a>和<a href="/wiki/Facebook" title="Facebook">Facebook</a><sup id="cite_ref-13" class="reference"><a href="#cite_note-13">[13]</a></sup>。</p><p>维基百科强调<a href="/wiki/Copyleft" title="Copyleft">Copyleft</a><a href="/wiki/%E8%87%AA%E7%94%B1%E5%85%A7%E5%AE%B9" title="自由内容">自由内容</a>、<a href="/wiki/%E5%8D%8F%E5%90%8C%E7%BC%96%E8%BE%91" title="协同编辑">协同编辑</a>（<span lang="en">Collaborative Editing</span>）以及<a href="/wiki/%E5%A4%9A%E8%AA%9E" class="mw-redirect" title="多语">多语言</a>版本的<a href="/wiki/%E7%B6%B2%E7%B5%A1%E7%99%BE%E7%A7%91%E5%85%A8%E6%9B%B8" class="mw-redirect" title="网络百科全书">网络百科全书</a>，并以<a href="/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF" class="mw-redirect" title="互联网">互联网</a>作为媒介而扩展成为一项基于<a href="/wiki/Wiki" title="Wiki">Wiki</a>技术发展的<a href="/wiki/%E4%B8%96%E7%95%8C" title="世界">世界性</a>百科全书协作计划，并由<a href="/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94" title="非营利组织">非营利</a>性质的<a href="/wiki/%E7%B6%AD%E5%9F%BA%E5%AA%92%E9%AB%94%E5%9F%BA%E9%87%91%E6%9C%83" class="mw-redirect" title="维基媒体基金会">维基媒体基金会</a>负责相关的发展事宜。维基百科是由来自世界各地的<a href="/wiki/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E7%A4%BE%E7%BE%A4" class="mw-redirect" title="维基百科社区">志愿者</a>合作编辑而成，整个项目总共收录了超过3,000万篇<a href="/wiki/Wikipedia:%E4%BB%80%E9%BA%BC%E6%98%AF%E6%A2%9D%E7%9B%AE" class="mw-redirect" title="Wikipedia:什么是条目">条目</a>，而其中<a href="/wiki/%E8%8B%B1%E8%AA%9E%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91" class="mw-redirect" title="英语维基百科">英语维基百科</a>以超过450万篇条目在数量上排名第一。维基百科允许任何访问网站的用户使用<a href="/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8" class="mw-redirect" title="网页浏览器">网页浏览器</a>自由阅览和修改绝大部标签页面的内容<sup id="cite_ref-14" class="reference"><a href="#cite_note-14">[14]</a></sup>，根据统计在维基百科上大约有35,000,000名登记注册用户<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[15]</a></sup>，其中有100,000名积极贡献者长期参与编辑工作<sup id="cite_ref-16" class="reference"><a href="#cite_note-16">[16]</a></sup>，而整个网站的总编辑次数更是超过10亿次之多<sup id="cite_ref-17" class="reference"><a href="#cite_note-17">[17]</a></sup><sup id="cite_ref-18" class="reference"><a href="#cite_note-18">[18]</a></sup>。截至2012年8月为止维基百科整个项目总共有285种各自独立运作的<a href="/wiki/Wikipedia:%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91%E8%AA%9E%E8%A8%80%E5%88%97%E8%A1%A8" class="mw-redirect" title="Wikipedia:维基百科语言列表">语言版本</a>，且已经被普遍认为是成规模最大且最为流行的网络<a href="/wiki/%E5%B7%A5%E5%85%B7%E4%B9%A6" title="工具书">工具书</a>，<a href="/wiki/%E7%99%BE%E7%A7%91" class="mw-redirect" title="百科">百科</a><sup id="cite_ref-Alexa_Internet_19-0" class="reference"><a href="#cite_note-Alexa_Internet-19">[19]</a></sup><sup id="cite_ref-20" class="reference"><a href="#cite_note-20">[20]</a></sup><sup id="cite_ref-21" class="reference"><a href="#cite_note-21">[21]</a></sup><sup id="cite_ref-22" class="reference"><a href="#cite_note-22">[22]</a></sup><sup id="cite_ref-23" class="reference"><a href="#cite_note-23">[23]</a></sup>。根据知名的<a href="/wiki/Alexa_Internet" title="Alexa Internet">Alexa Internet</a>其网络流量统计数字指出全世界总共有近3.65亿名民众使用维基百科，且维基百科也是全球浏览人数排名第六高的网站（最高纪录是排名在第五名位置），同时也是全世界最大的无<a href="/wiki/%E5%BB%A3%E5%91%8A" title="广告">广告</a>网站<sup id="cite_ref-Alexa_Internet_19-1" class="reference"><a href="#cite_note-Alexa_Internet-19">[19]</a></sup><sup id="cite_ref-Top_Sites_24-0" class="reference"><a href="#cite_note-Top_Sites-24">[24]</a></sup><sup id="cite_ref-.E6.96.AF.E5.9C.96.E7.88.BE.E7.89.B9.C2.B7.E9.9F.8B.E6.96.AF_25-0" class="reference"><a href="#cite_note-.E6.96.AF.E5.9C.96.E7.88.BE.E7.89.B9.C2.B7.E9.9F.8B.E6.96.AF-25">[25]</a></sup>。根据估计，维基百科每个月便有将近2.7亿的<a href="/wiki/%E7%BE%8E%E5%9C%8B" class="mw-redirect" title="美国">美国</a>人民前往该网站浏览<sup id="cite_ref-.E4.BA.A8.E7.89.B9.C2.B7.E6.B2.83.E5.85.8B_26-0" class="reference"><a href="#cite_note-.E4.BA.A8.E7.89.B9.C2.B7.E6.B2.83.E5.85.8B-26">[26]</a></sup>。</p><p>由于维基百科能够十分迅速整理出与最近发生事件相关的信息并且任何人都能够深入整理数据内容，使得许多人也渐渐将维基百科视为一个新闻来源<sup id="cite_ref-27" class="reference"><a href="#cite_note-27">[27]</a></sup><sup id="cite_ref-28" class="reference"><a href="#cite_note-28">[28]</a></sup>。同时为了方便一般学生或者浏览群众能够简单了解条目的内容，维基百科绝大多数的文章都会尽可能以简单的话语来解释困难的概念<sup id="cite_ref-Legal_Education_Review_29-0" class="reference"><a href="#cite_note-Legal_Education_Review-29">[29]</a></sup>。随着维基百科在社会上的普及，也陆陆续续促成了包括<a href="/wiki/%E7%B6%AD%E5%9F%BA%E6%96%B0%E8%81%9E" class="mw-redirect" title="维基新闻">维基新闻</a>、<a href="/wiki/%E7%B6%AD%E5%9F%BA%E6%95%99%E7%A7%91%E6%9B%B8" title="维基教科书">维基教科书</a>等其它姐妹项目的产生。然而尽管维基百科在其官方政策上坚决拥护<a href="/wiki/Wikipedia:%E5%8F%AF%E4%BE%9B%E6%9F%A5%E8%AD%89" title="Wikipedia:可供查证">可供查证</a>以及<a href="/wiki/Wikipedia:%E4%B8%AD%E7%AB%8B%E7%9A%84%E8%A7%80%E9%BB%9E" class="mw-redirect" title="Wikipedia:中立的观点">中立观点</a>这两项要求，维基百科仍然因为任何人都能够加入编辑的特性受到社会许多人士的批评，其中又以编辑条目的质量、信息提供的准确度、呈现态度的客观性以及无法提供一致的准确内容为多<sup id="cite_ref-30" class="reference"><a href="#cite_note-30">[30]</a></sup>。另外一部分人士指称问题在于维基百科采用了Wiki技术，这使得他们认为任何人都可以编辑维基百科内容的作法本身就是维基百科最大且无法改变的缺点<sup id="cite_ref-31" class="reference"><a href="#cite_note-31">[31]</a></sup>，在这般情况下破坏者能够轻易在易引起争纷的政治和宗教条目中添加虚构的内容、删除正确的信息或者任意添加自己的偏见<sup id="cite_ref-.E8.93.8B.E4.BC.8A.C2.B7.E6.B2.83.E7.88.BE.E7.89.B9.E6.96.AF_32-0" class="reference"><a href="#cite_note-.E8.93.8B.E4.BC.8A.C2.B7.E6.B2.83.E7.88.BE.E7.89.B9.E6.96.AF-32">[32]</a></sup>。而包括维基百科创始人<a href="/wiki/%E5%90%89%E7%B1%B3%C2%B7%E5%A8%81%E7%88%BE%E6%96%AF" title="吉米·威尔士">吉米·威尔士</a>以及英国牛津大学教授<a href="/w/index.php?title=%E5%96%AC%E7%B4%8D%E6%A3%AE%C2%B7%E9%BD%8A%E7%89%B9%E6%9E%97&amp;action=edit&amp;redlink=1" class="new" title="乔纳森·齐特林（页面不存在）">乔纳森·齐特林</a>（Jonathan Zittrain）等知识分子对于条目准确性的争议，认为在一定程度上是源自于他人对于维基百科的偏见<sup id="cite_ref-33" class="reference"><a href="#cite_note-33">[33]</a></sup><sup id="cite_ref-.E7.BE.8E.E5.9C.8B.E6.AD.B7.E5.8F.B2.E9.9B.9C.E8.AA.8C_34-0" class="reference"><a href="#cite_note-.E7.BE.8E.E5.9C.8B.E6.AD.B7.E5.8F.B2.E9.9B.9C.E8.AA.8C-34">[34]</a></sup><sup id="cite_ref-35" class="reference"><a href="#cite_note-35">[35]</a></sup>。为了尽可能解决各界对于条目质量的质疑，维基百科也陆续提出许多相对应的<a href="/wiki/Wikipedia:%E6%96%B9%E9%87%9D%E8%88%87%E6%8C%87%E5%BC%95" title="Wikipedia:方针与指引">方针与指引</a>来保障文章的质量，同时也希望协同编辑时能够列出足以供他人<a href="/wiki/Wikipedia:%E5%8F%AF%E4%BE%9B%E6%9F%A5%E8%AD%89" title="Wikipedia:可供查证">查证</a>、审核及确认的数据源。然而批评者也提到许多维基百科绝大多数大量信息都是由那些喜欢来自<a href="/wiki/%E6%B5%81%E8%A1%8C%E6%96%87%E5%8C%96" title="流行文化">流行文化</a>等事物的民众编辑自己喜爱的项目而成<sup id="cite_ref-36" class="reference"><a href="#cite_note-36">[36]</a></sup>，但这也意味着在许多情况之下网站十分容易因为各种理由而受到他人<a href="/wiki/%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91%E4%B8%8A%E7%9A%84%E4%BA%BA%E7%82%BA%E7%A0%B4%E5%A3%9E" class="mw-redirect" title="维基百科上的人为破坏">人为破坏</a><sup id="cite_ref-.E4.BA.BA.E5.9B.A0.E8.88.87.E8.A8.88.E7.AE.97.E7.B3.BB.E7.B5.B1.E7.A0.94.E8.A8.8E.E6.9C.83_37-0" class="reference"><a href="#cite_note-.E4.BA.BA.E5.9B.A0.E8.88.87.E8.A8.88.E7.AE.97.E7.B3.BB.E7.B5.B1.E7.A0.94.E8.A8.8E.E6.9C.83-37">[37]</a></sup><sup id="cite_ref-.E8.A8.88.E7.AE.97.E6.A9.9F_.E5.8D.94.E6.9C.83_38-0" class="reference"><a href="#cite_note-.E8.A8.88.E7.AE.97.E6.A9.9F_.E5.8D.94.E6.9C.83-38">[38]</a></sup><sup id="cite_ref-39" class="reference"><a href="#cite_note-39">[39]</a></sup>；同时批评者也指出就算一些报告证实许多文章在遭到<a href="/wiki/%E7%A0%B4%E5%A3%9E" title="破坏">破坏</a>后往往能立即简单地被<a href="/wiki/%E6%9C%80%E8%BF%91%E6%9B%B4%E6%94%B9" class="mw-redirect" title="最近更改">删除</a>，但是维基百科内仍然包含有大量未经证实或者是相互矛盾的信息<sup id="cite_ref-Frank_Ahrens_40-0" class="reference"><a href="#cite_note-Frank_Ahrens-40">[40]</a></sup>。不过《<a href="/wiki/%E8%87%AA%E7%84%B6_(%E6%9C%9F%E5%88%8A)" title="自然 (期刊)">自然</a>》在2005年的调查之中认为维基百科在科学文章这一领域与作为传统百科全书代表的《<a href="/wiki/%E5%A4%A7%E8%8B%B1%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6" title="大英百科全书">大英百科全书</a>》有着相似的精确度，但是两者在内容上都有一定程度上的“严重缺失”<sup id="cite_ref-.E5.90.89.E5.A7.86.C2.B7.E8.B3.88.E7.88.BE.E6.96.AF_41-0" class="reference"><a href="#cite_note-.E5.90.89.E5.A7.86.C2.B7.E8.B3.88.E7.88.BE.E6.96.AF-41">[41]</a></sup><sup id="cite_ref-.E8.8B.B1.E5.9C.8B.E5.BB.A3.E6.92.AD.E5.85.AC.E5.8F.B8_42-0" class="reference"><a href="#cite_note-.E8.8B.B1.E5.9C.8B.E5.BB.A3.E6.92.AD.E5.85.AC.E5.8F.B8-42">[42]</a></sup>。</p>');
INSERT INTO `blog_article` (`ID`, `TITLE`, `PUBLISH_DATE`, `PUBLISH_TIME`, `VIEW_TIME`, `ARTICLE`) VALUES
(24, 'MySQL字符串函数：字符串截取', 20170107, 124444, 0, '<div id="blog_content" class="blog_content"><p><span style="font-family: Arial, sans-serif, Helvetica, Tahoma; font-size: 14px; line-height: 25px;">\r\n</span></p><p style="padding: 0px; margin: 0px;"><span style="font-size: small;">MySQL 字符串截取函数：left(), right(), substring(), substring_index()。还有 mid(), substr()。其中，mid(), substr() 等价于 substring() 函数，substring() 的功能非常强大和灵活。</span></p><!--MORE--><p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">1. 字符串截取：left(str, length)</span></strong></span></p><pre><span style="font-size: small;">mysql&gt; select left(''sqlstudy.com'', 3);\r\n+-------------------------+\r\n| left(''sqlstudy.com'', 3) |\r\n+-------------------------+\r\n| sql                     |\r\n+-------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">2. 字符串截取：right(str, length)</span></strong></span></p><pre><span style="font-size: small;">mysql&gt; select right(''sqlstudy.com'', 3);\r\n+--------------------------+\r\n| right(''sqlstudy.com'', 3) |\r\n+--------------------------+\r\n| com                      |\r\n+--------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: medium;"><strong>3. 字符串截取：substring(str, pos); substring(str, pos, len)</strong></span></span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.1 从字符串的第 4 个字符位置开始取，直到结束。</span></p><pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', 4);\r\n+------------------------------+\r\n| substring(''sqlstudy.com'', 4) |\r\n+------------------------------+\r\n| study.com                    |\r\n+------------------------------+\r\n</span></pre><p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.2 从字符串的第 4 个字符位置开始取，只取 2 个字符。</span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', 4, 2);\r\n+---------------------------------+\r\n| substring(''sqlstudy.com'', 4, 2) |\r\n+---------------------------------+\r\n| st                              |\r\n+---------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.3 从字符串的第 4 个字符位置（倒数）开始取，直到结束。</span></p><pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', -4);\r\n+-------------------------------+\r\n| substring(''sqlstudy.com'', -4) |\r\n+-------------------------------+\r\n| .com                          |\r\n+-------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">3.4 从字符串的第 4 个字符位置（倒数）开始取，只取 2 个字符。</span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring(''sqlstudy.com'', -4, 2);\r\n+----------------------------------+\r\n| substring(''sqlstudy.com'', -4, 2) |\r\n+----------------------------------+\r\n| .c                               |\r\n+----------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;">我们注意到在函数 substring(str,pos, len)中， pos 可以是负值，但 len 不能取负值。</span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><strong><span style="font-size: medium;">4. 字符串截取：substring_index(str,delim,count)</span></strong></span></p>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.1 截取第二个 ''.'' 之前的所有字符。</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.'', 2);\r\n+------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.'', 2) |\r\n+------------------------------------------------+\r\n| www.sqlstudy                                   |\r\n+------------------------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.2 截取第二个 ''.'' （倒数）之后的所有字符。</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.'', -2);\r\n+-------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.'', -2) |\r\n+-------------------------------------------------+\r\n| com.cn                                          |\r\n+-------------------------------------------------+\r\n</span></pre>\r\n<p style="padding: 0px; margin: 0px;"><span style="font-size: small;"><span style="font-size: small;">4.3 如果在字符串中找不到 delim 参数指定的值，就返回整个字符串</span></span></p>\r\n<pre><span style="font-size: small;">mysql&gt; select substring_index(''www.sqlstudy.com.cn'', ''.coc'', 1);\r\n+---------------------------------------------------+\r\n| substring_index(''www.sqlstudy.com.cn'', ''.coc'', 1) |\r\n+---------------------------------------------------+\r\n| www.sqlstudy.com.cn                               |\r\n+---------------------------------------------------+</span></pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n</p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">ASCII(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="">返回字符串</span><span>str</span><span style="">的最左面字符的</span><span>ASCII</span><span style="">代码值。如果</span><span>str</span><span style="">是空字符串，返回</span><span>0</span><span style="">。如果</span><span>str</span><span style="">是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt; text-indent: 10.5pt;"><span style="">如：</span><span>select\r\nASCII(''2'');select ASCII(2); </span><span style="">结果都为</span><span>2</span><span style="">的</span><span>Ascii</span><span style="">码值</span><span> 50<span style="">&nbsp;&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt; text-indent: 10.5pt;"><span style="">如：</span><span>select\r\nASCII(''2'');select ASCII(2); </span><span style="">结果都为</span><span>2</span><span style="">的</span><span>Ascii</span><span style="">码值</span><span> 50<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">CHAR(N,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>CHAR()</span><span style="">将参数解释为整数并且返回由这些整数的</span><span>ASCII</span><span style="">代码字符组成的一个字符串。</span><span>NULL</span><span style="">值被跳过。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCHAR(77,121,83,81,NULL);<span style="">&nbsp; </span></span><span style="">结果为</span><span> MySQ </span><span style="">；</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCHAR(77,121,83,81,NULL);<span style="">&nbsp; </span></span><span style="">结果为</span><span> MySQ </span><span style="">；</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><strong style=""><span style="font-size: 14.0pt;">[color=darkred]CONCAT(str1,str2,...) </span></strong></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp; </span></span><span style="">返回来自于参数连结的字符串。如果任何参数是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。可以有超过</span><span>2</span><span style="">个的参数。一个数字参数被变换为等价的字符串形式。</span><span>\r\n</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(''My'', ''S'', ''QL'');<span style="">&nbsp; </span>//MySQL<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(12.3); //''12.3''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(''My'', ''S'', ''QL'');<span style="">&nbsp; </span>//MySQL</span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>select\r\nCONCAT(12.3); //''12.3''</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LENGTH(str) </span></strong></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp; </span></span><span style="">计算字符串长度</span>\r\n<span style="">：</span><span>select length(''text'') ;<span style="">&nbsp; </span>//4 </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOCATE(substr,str) </span></strong><strong style=""><span style="">　</span></strong><span> </span></p>\r\n<p class="MsoNormal"><span>POSITION(substr IN str) </span></p>\r\n<p class="MsoNormal"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">第一个出现的位置，如果</span><span>substr</span><span style="">不是在</span><span>str</span><span style="">里面，返回</span><span>0. </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select LOCATE(''bar'', ''foobarbar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.mysql&gt; select LOCATE(''xbar'', ''foobar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>4.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LOCATE(''bar'', ''foobarbar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LOCATE(''xbar'', ''foobar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0</span><span style="">该函数是多字节可靠的</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOCATE(substr,str,pos) </span></strong></p>\r\n<p class="MsoNormal"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">第一个出现的位置，从位置</span><span>pos</span><span style="">开始。如果</span><span>substr</span><span style="">不是在</span><span>str</span><span style="">里面，返回</span><span>0</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal"><span>1.mysql&gt; select LOCATE(''bar'',\r\n''foobarbar'',5);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style=""><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 7<span style="">&nbsp;\r\n</span></span></p>\r\n<p class="MsoNormal"><span>mysql&gt; select LOCATE(''bar'',\r\n''foobarbar'',5);</span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; 7</span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">INSTR(str,substr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回子串</span><span>substr</span><span style="">在字符串</span><span>str</span><span style="">中的第一个出现的位置。这与有</span><span>2</span><span style="">个参数形式的</span><span>LOCATE()</span><span style="">相同，除了参数被颠倒。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select INSTR(''foobarbar'', ''bar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.mysql&gt; select INSTR(''xbar'', ''foobar'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>4.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSTR(''foobarbar'', ''bar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 4</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSTR(''xbar'', ''foobar'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0</span><span style="">这函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LPAD(str,len,padstr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，左面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.&lt;PRE class=java name="code"&gt;mysql&gt; select\r\nLPAD(''hi'',4,''??'');<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; ''??hi''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>3.\r\n[color=darkred]RPAD(str,len,padstr)[/color] &lt;/PRE&gt;</span><span style="">返回字符串</span><span>str</span><span style="">，右面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> mysql&gt; select\r\nLPAD(''hi'',4,''??'');<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''??hi''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>mysql&gt; select\r\nLPAD(''hi'',4,''??'');</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''??hi''</span></p>\r\n<p class="MsoNormal"><strong style=""><span style="font-size: 14.0pt;">[color=darkred]RPAD(str,len,padstr)[/color] </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，右面用字符串</span><span>padstr</span><span style="">填补直到</span><span>str</span><span style="">是</span><span>len</span><span style="">个字符长。</span><span><span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RPAD(''hi'',5,''?''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''hi???'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LEFT(str,len) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">的最左面</span><span>len</span><span style="">个字符。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select LEFT(''foobarbar'', 5);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''fooba''</span><span style="">该函数是多字节可靠的。</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LEFT(''foobarbar'', 5);</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''fooba''</span><span style="">该函数是多字节可靠的。</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">RIGHT(str,len) </span></strong></p>\r\n<p class="MsoNormal"><span style="">返回字符串</span><span>str</span><span style="">的最右面</span><span>len</span><span style="">个字符。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>Java</span><span style="">代码</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>1.mysql&gt; select RIGHT(''foobarbar'', 4);<span style="">&nbsp;&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>2.<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''rbar''<span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RIGHT(''foobarbar'', 4);</span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''rbar''</span></p>\r\n<p class="MsoNormal"><span style="">该函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SUBSTRING(str,pos) </span></strong></p>\r\n<p class="MsoNormal"><span style="">　</span><span> </span></p>\r\n<p class="MsoNormal"><span>SUBSTRING(str FROM pos) </span></p>\r\n<p class="MsoNormal"><span style="">从字符串</span><span>str</span><span style="">的起始位置</span><span>pos</span><span style="">返回一个子串。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING(''Quadratically'',5); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''ratically'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING(''foobarbar'' FROM 4); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数是多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SUBSTRING_INDEX(str,delim,count)\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回从字符串</span><span>str</span><span style="">的第</span><span>count</span><span style="">个出现的分隔符</span><span>delim</span><span style="">之后的子串。如果</span><span>count</span><span style="">是正数，返回最后的分隔符到左边</span><span>(</span><span style="">从左边数</span><span>) </span><span style="">的所有字符。如果</span><span>count</span><span style="">是负数，返回最后的分隔符到右边的所有字符</span><span>(</span><span style="">从右边数</span><span>)</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING_INDEX(''www.mysql.com'', ''.'', 2); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''www.mysql'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SUBSTRING_INDEX(''www.mysql.com'', ''.'', -2); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''mysql.com'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LTRIM(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回删除了其前置空格字符的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LTRIM(''<span style="">&nbsp;\r\n</span>barbar''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">RTRIM(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回删除了其拖后空格字符的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select RTRIM(''barbar<span style="">&nbsp;&nbsp;\r\n</span>''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barbar'' </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span><span style="">&nbsp; </span></span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">TRIM([[BOTH | LEADING |\r\nTRAILING] [remstr] FROM] str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，其所有</span><span>remstr</span><span style="">前缀或后缀被删除了。如果没有修饰符</span><span>BOTH</span><span style="">、</span><span>LEADING</span><span style="">或</span><span>TRAILING</span><span style="">给出，</span><span>BOTH</span><span style="">被假定。如果</span><span>remstr</span><span style="">没被指定，空格被删除。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(''<span style="">&nbsp;\r\n</span>bar<span style="">&nbsp;&nbsp; </span>''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''bar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(LEADING ''x'' FROM ''xxxbarxxx''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barxxx'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(BOTH ''x'' FROM ''xxxbarxxx''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''bar'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select TRIM(TRAILING ''xyz'' FROM ''barxxyz''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''barx'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SOUNDEX(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回</span><span>str</span><span style="">的一个同音字符串。听起来“大致相同”的</span><span>2</span><span style="">个字符串应该有相同的同音字符串。一个“标准”的同音字符串长是</span><span>4</span><span style="">个字符，但是</span><span>SOUNDEX()</span><span style="">函数返回一个任意长的字符串。你可以在结果上使用</span><span>SUBSTRING()</span><span style="">得到一个“标准”的</span> <span style="">同音串。所有非数字字母字符在给定的字符串中被忽略。所有在</span><span>A-Z</span><span style="">之外的字符国际字母被当作元音。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SOUNDEX(''Hello''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''H400'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SOUNDEX(''Quadratically''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''Q36324'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">SPACE(N) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回由</span><span>N</span><span style="">个空格字符组成的一个字符串。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select SPACE(6); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REPLACE(str,from_str,to_str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，其字符串</span><span>from_str</span><span style="">的所有出现由字符串</span><span>to_str</span><span style="">代替。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REPLACE(''www.mysql.com'', ''w'', ''Ww''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''WwWwWw.mysql.com'' </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REPEAT(str,count) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回由重复</span><span>countTimes</span><span style="">次的字符串</span><span>str</span><span style="">组成的一个字符串。如果</span><span>count &lt;= 0</span><span style="">，返回一个空字符串。如果</span><span>str</span><span style="">或</span><span>count</span><span style="">是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REPEAT(''MySQL'', 3); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt;\r\n''MySQLMySQLMySQL'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">REVERSE(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回颠倒字符顺序的字符串</span><span>str</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select REVERSE(''abc''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''cba'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数对多字节可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">INSERT(str,pos,len,newstr) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，在位置</span><span>pos</span><span style="">起始的子串且</span><span>len</span><span style="">个字符长得子串由字符串</span><span>newstr</span><span style="">代替。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select INSERT(''Quadratic'', 3, 4, ''What''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''QuWhattic'' </span></p>\r\n<p class="MsoNormal"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">ELT(N,str1,str2,str3,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">如果</span><span>N= 1</span><span style="">，返回</span><span>str1</span><span style="">，如果</span><span>N= 2</span><span style="">，返回</span><span>str2</span><span style="">，等等。如果</span><span>N</span><span style="">小于</span><span>1</span><span style="">或大于参数个数，返回</span><span>NULL</span><span style="">。</span><span>ELT()</span><span style="">是</span><span>FIELD()</span><span style="">反运算。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>mysql&gt; select ELT(1, ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''ej'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span>mysql&gt; select ELT(4, ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 10.5pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''foo'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">FIELD(str,str1,str2,str3,...)\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回</span><span>str</span><span style="">在</span><span>str1, str2, str3, ...</span><span style="">清单的索引。如果</span><span>str</span><span style="">没找到，返回</span><span>0</span><span style="">。</span><span>FIELD()</span><span style="">是</span><span>ELT()</span><span style="">反运算。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select FIELD(''ej'', ''Hej'', ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 2 </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select FIELD(''fo'', ''Hej'', ''ej'', ''Heja'', ''hej'', ''foo''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 0 </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">FIND_IN_SET(str,strlist) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">如果字符串</span><span>str</span><span style="">在由</span><span>N</span><span style="">子串组成的表</span><span>strlist</span><span style="">之中，返回一个</span><span>1</span><span style="">到</span><span>N</span><span style="">的值。一个字符串表是被“</span><span>,</span><span style="">”分隔的子串组成的一个字符串。如果第一个参数是一个常数字符串并且第二个参数是一种类型为</span><span>SET</span><span style="">的列，</span><span>FIND_IN_SET()</span><span style="">函数被优化而使用位运算！如果</span><span>str</span><span style="">不是在</span><span>strlist</span><span style="">里面或如果</span><span>strlist</span><span style="">是空字符串，返回</span><span>0</span><span style="">。如果任何一个参数是</span><span>NULL</span><span style="">，返回</span><span>NULL</span><span style="">。如果第一个参数包含一个“</span><span>,</span><span style="">”，该函数将工作不正常。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT FIND_IN_SET(''b'',''a,b,c,d''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; 2 </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">MAKE_SET(bits,str1,str2,...) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回一个集合</span><span> (</span><span style="">包含由“</span><span>,</span><span style="">”字符分隔的子串组成的一个字符串</span><span>)</span><span style="">，由相应的位在</span><span>bits</span><span style="">集合中的的字符串组成。</span><span>str1</span><span style="">对应于位</span><span>0</span><span style="">，</span><span>str2</span><span style="">对应位</span><span>1</span><span style="">，等等。在</span><span>str1, str2, ...</span><span style="">中的</span><span>NULL</span><span style="">串不添加到结果中。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(1,''a'',''b'',''c''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''a'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(1 | 4,''hello'',''nice'',''world''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''hello,world'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; SELECT MAKE_SET(0,''a'',''b'',''c''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; '''' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">EXPORT_SET(bits,on,off,[separator,[number_of_bits]])\r\n</span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回一个字符串，在这里对于在“</span><span>bits</span><span style="">”中设定每一位，你得到一个“</span><span>on</span><span style="">”字符串，并且对于每个复位</span><span>(reset)</span><span style="">的位，你得到一个“</span><span>off</span><span style="">”字符串。每个字符串用“</span><span>separator</span><span style="">”分隔</span><span>(</span><span style="">缺省“</span><span>,</span><span style="">”</span><span>)</span><span style="">，并且只有“</span><span>bits</span><span style="">”的“</span><span>number_of_bits</span><span style="">”</span><span> (</span><span style="">缺省</span><span>64)</span><span style="">位被使用。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select EXPORT_SET(5,''Y'',''N'','','',4) </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; Y,N,Y,N </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LCASE(str) </span></strong></p>\r\n<p class="MsoNormal"><span style="">　</span><span> </span></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span>LOWER(str) </span><span style="">返回字符串</span><span>str</span><span style="">，根据当前字符集映射</span><span>(</span><span style="">缺省是</span><span>ISO-8859-1 Latin1)</span><span style="">把所有的字符改变成小写。该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select LCASE(''QUADRATICALLY''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''quadratically'' </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">UCASE(str) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">返回字符串</span><span>str</span><span style="">，根据当前字符集映射</span><span>(</span><span style="">缺省是</span><span>ISO-8859-1 Latin1)</span><span style="">把所有的字符改变成大写。该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; select UCASE(''Hej''); </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-&gt; ''HEJ'' </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span style="">该函数对多字节是可靠的。</span><span> </span></p>\r\n<p class="MsoNormal" style=""><strong style=""><span style="font-size: 14.0pt;">LOAD_FILE(file_name) </span></strong></p>\r\n<p class="MsoNormal" style="text-indent: 21.0pt;"><span style="">读入文件并且作为一个字符串返回文件内容。文件必须在服务器上，你必须指定到文件的完整路径名，而且你必须有</span><span>file</span><span style="">权限。文件必须所有内容都是可读的并且小于</span><span>max_allowed_packet</span><span style="">。如果文件不存在或由于上面原因之一不能被读出，函数返回</span><span>NULL</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span>mysql&gt; UPDATE table_name </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SET\r\nblob_column=LOAD_FILE("/tmp/picture") </span></p>\r\n<p class="MsoNormal" style="margin-left: 21.0pt;"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>WHERE id=1; </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span>MySQL</span><span style="">必要时自动变换数字为字符串，并且反过来也如此：</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span>mysql&gt; SELECT 1+"1"; </span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; 2 </span></p>\r\n<p class="MsoNormal"><span>mysql&gt; SELECT CONCAT(2,'' test''); </span></p>\r\n<p class="MsoNormal"><span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>-&gt; ''2 test'' </span></p>\r\n<p class="MsoNormal"><span style="">如果你想要明确地变换一个数字到一个字符串，把它作为参数传递到</span><span>CONCAT()</span><span style="">。</span><span> </span></p>\r\n<p class="MsoNormal"><span>&nbsp;</span></p>\r\n<p class="MsoNormal"><span style="">如果字符串函数提供一个二进制字符串作为参数，结果字符串也是一个二进制字符串。被变换到一个字符串的数字被当作是一个二进制字符串。这仅影响比较。</span></p>\r\n\r\n  </div>'),
(25, '王小波', 4, 6, 0, '<p><b>王小波</b> （1952年5月13日－1997年4月11日），<a href="/wiki/%E5%8C%97%E4%BA%AC%E4%BA%BA" title="北京人">北京人</a>，中华人民共和国著名作家。年轻时在云南农场作过<a href="/wiki/%E7%9F%A5%E8%AF%86%E9%9D%92%E5%B9%B4" title="知识青年">知青</a>，插过队，做过工人、老师。1978年至1982年在<a href="/wiki/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E5%A4%A7%E5%AD%A6" title="中国人民大学">中国人民大学</a>学习。1984年前往<a href="/wiki/%E7%BE%8E%E5%9B%BD" title="美国">美国</a>留学。1988年获<a href="/wiki/%E5%8C%B9%E5%85%B9%E5%A0%A1%E5%A4%A7%E5%AD%A6" class="mw-redirect" title="匹兹堡大学">匹兹堡大学</a>硕士学位。后任教于<a href="/wiki/%E5%8C%97%E4%BA%AC%E5%A4%A7%E5%AD%A6" title="北京大学">北京大学</a>和<a href="/wiki/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E5%A4%A7%E5%AD%A6" title="中国人民大学">中国人民大学</a>。1992年后开始成为自由撰稿人。1997年4月11日因心脏病突发逝世于北京。</p><!--MORE--><h2><span class="mw-headline" id=".E4.BD.9C.E5.93.81.E9.A3.8E.E6.A0.BC">作品风格</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E7%8E%8B%E5%B0%8F%E6%B3%A2&amp;action=edit&amp;section=2" title="编辑小节：作品风格">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p>王小波在白话文叙述方面有很深的造诣，写作小说的同时他也创作过一些杂文与随笔文章。并且很多人都是由于精彩而睿智的杂文作品接触和认识到王小波。王小波的东西方生活与求学经历，使他成为一个富有自由人文精神和独立知识分子品格的写作者。</p><p>在他的作品中，贯穿着其特有的黑色幽默，这些也表明了王小波对于生命和生活的态度。王小波的一系列小说都以自己所经历过的生活作为蓝本，如下放到<a href="/wiki/%E4%BA%91%E5%8D%97" class="mw-redirect" title="云南">云南</a>的知识青年，在某个医院或高等专科学校从事技术工种的工程师等等，作品的年代背景也与王小波的生活与成长时期相重叠，在这些作品中，他刻画了这样一种现实：“我看到一个无智的世界，但是智慧在混沌中存在；我看到一个无性的世界，但是性爱在混沌中存在；我看到一个无趣的世界，但是有趣在混沌中存在”。</p><p>从杂文作品中看，哲学家<a href="/wiki/%E4%BC%AF%E7%89%B9%E8%98%AD%C2%B7%E7%BE%85%E7%B4%A0" class="mw-redirect" title="伯特兰·罗素">伯特兰·罗素</a>对他思想影响很深，他推崇和提倡科学与理性，并且认为人的生活应该追求未知，他反对进行思想禁锢，主张人们思维应该保持多样化，使生活变得有意思有趣，去热爱智慧。 他的作品在他身后盛行于世，影响了众多青年，特别是二十世纪九十年代的大学生，他们至今还会常常引用王小波作品中的文字，来表明自己的激昂和犀利。其曾编写过电影剧本《东宫西宫》，并由此获得了<a href="/wiki/%E9%98%BF%E6%A0%B9%E5%BB%B7" title="阿根廷">阿根廷</a>国际电影节最佳编剧。</p><h2><span class="mw-headline" id=".E7.8E.8B.E5.B0.8F.E6.B3.A2.E7.8E.B0.E8.B1.A1">王小波现象</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E7%8E%8B%E5%B0%8F%E6%B3%A2&amp;action=edit&amp;section=3" title="编辑小节：王小波现象">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p>王小波生前两获《<a href="/wiki/%E8%81%94%E5%90%88%E6%8A%A5" class="mw-redirect" title="联合报">联合报</a>》中篇小说大奖，在海外华人文学界获得普遍称誉。但当其期望进入内地文坛体制时，却遭到了前所未有的冷遇，甚至出版作品都很困难。王小波在其小说集《黄金时代》的后记中坦承：“本书得以面世，多亏了不屈不挠的意志和积极的生活态度。必须说明，这些优秀的品质并非作者所有。鉴于出版这本书比写这本书困难得多，所以假如本书有些可取之处，当归于所有帮助出版它的朋友们。”</p><p>而1997年王小波遽然逝世，成为了王小波现象的开端。其作品被空前的传播和接受，在民间与知识界都引起巨大反响，作品的发行量至21世纪仍为90年代小说家中的佼佼者。各种形式的王小波纪念会，作品研讨会层出不穷，一时间王小波现象席卷文坛、文艺界与文学批评界。</p><p>王小波现象的爆破点在于其杂文，值得一提的是，其杂文在身前就曾经受到关注。评论界有把王小波热比作<a href="/wiki/%E9%99%88%E5%AF%85%E6%81%AA" title="陈寅恪">陈寅恪</a>热之后，<a href="/wiki/%E8%87%AA%E7%94%B1%E4%B8%BB%E4%B9%89" title="自由主义">自由主义</a>浪潮在中国的第二次博兴。</p><p>关于王小波小说价值的技术性讨论，主流批评界保持了异常的缄默。关于王小波小说价值的讨论，在主流文学批评界一直处于边缘化的地位。可以说，王小波现象的主要焦点在于其杂文以及其所宣扬的自由主义思潮。而其小说在文坛的地位与技术性讨论，仍处于悬而不决的地位。</p>');
INSERT INTO `blog_article` (`ID`, `TITLE`, `PUBLISH_DATE`, `PUBLISH_TIME`, `VIEW_TIME`, `ARTICLE`) VALUES
(26, 'JR东海373系电力动车组', 20170107, 165554, 0, '<p>373系是一款属于东海旅客铁道（JR东海）的直流特急型电力动车组系列。</p><!--MORE--><h2><span class="mw-headline" id=".E6.A6.82.E8.A6.81">概要</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=JR%E6%9D%B1%E6%B5%B7373%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;section=1" title="编辑小节：概要">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><p><b>373系电力动车组</b>的开发目的是为了要取代使用多年的<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5165%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁165系电力动车组（页面不存在）">165系</a><a href="/w/index.php?title=%E6%80%A5%E8%A1%8C%E5%9E%8B%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="急行型电力动车组（页面不存在）">急行型电力动车组</a><sup id="cite_ref-373B_1-0" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>，为了能够在车辆的运用以及调度上发挥到极致，开发出与<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5185%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁185系电力动车组（页面不存在）">185系电力动车组</a>相同具备了普通列车以及特急列车的综合车型<sup id="cite_ref-373B_1-1" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>。373系由<a href="/wiki/%E6%97%A5%E6%9C%AC%E8%BB%8A%E8%BC%9B%E8%A3%BD%E9%80%A0" title="日本车辆制造">日本车辆制造</a>以及<a href="/wiki/%E6%97%A5%E7%AB%8B" title="日立">日立制作所</a>承造，从1995年8月至1996年1月为止，一共生产了3辆编组14组总共42辆<sup id="cite_ref-373C_2-0" class="reference"><a href="#cite_note-373C-2">[2]</a></sup>。</p><p>1996年获日本<a href="/wiki/%E9%80%9A%E5%95%86%E7%94%A2%E6%A5%AD%E7%9C%81" class="mw-redirect" title="通商产业省">通商产业省</a>（现称<a href="/wiki/%E7%B6%93%E6%BF%9F%E7%94%A2%E6%A5%AD%E7%9C%81" title="经济产业省">经济产业省</a>）选定为“优良设计奖<span id="noteTag-cite_ref-sup"><sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[注 1]</a></sup></span>”（商品设计部门）得奖列车<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[3]</a></sup>。</p><h2><span class="mw-headline" id=".E8.A6.8F.E6.A0.BC.E8.88.87.E6.A7.8B.E9.80.A0">规格与构造</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=JR%E6%9D%B1%E6%B5%B7373%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A&amp;action=edit&amp;section=2" title="编辑小节：规格与构造">编辑</a><span class="mw-editsection-bracket">]</span></span></h2><dl>\r\n<dt>编组体系</dt>\r\n</dl><p>373系从<a href="/wiki/%E6%9D%B1%E4%BA%AC%E7%AB%99" title="东京站">东京</a>方向开始连结编组，分别是驾驶动力车<b>KuMoHa373型</b>（<span lang="ja">クモハ373形</span>）、无动力车<b>SaHa373型</b>（<span lang="ja">サハ373形</span>）以及驾驶无动力车<b>KuHa373型</b>（<span lang="ja">クハ373形</span>）<sup id="cite_ref-373C_2-1" class="reference"><a href="#cite_note-373C-2">[2]</a></sup><span id="noteTag-cite_ref-sup"><sup id="cite_ref-5" class="reference"><a href="#cite_note-5">[注 2]</a></sup></span>，基本上以三辆为一个编组，最多能够连结至九辆。在<a href="/w/index.php?title=%E8%BA%AB%E5%BB%B6%E7%B7%9A&amp;action=edit&amp;redlink=1" class="new" title="身延线（页面不存在）">身延线</a>、<a href="/wiki/%E9%A3%AF%E7%94%B0%E7%B7%9A" title="饭田线">饭田线</a>等地方线路采用三辆编组，373系实施单一等级制，而没有设置<a href="/wiki/%E7%B6%A0%E8%89%B2%E8%BB%8A%E8%BC%9B" class="mw-redirect" title="绿色车辆">绿色车辆</a><sup id="cite_ref-373S_6-0" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>车体</dt>\r\n</dl><p>车体为了达到轻量化的目的，主要构造采用<a href="/wiki/%E4%B8%8D%E9%8F%BD%E9%8B%BC" title="不锈钢">不锈钢</a>制，车头部分采用碳钢制<sup id="cite_ref-373A_7-0" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>，车体的最大长度21.3m。车门的部分采用类似<a href="/wiki/%E9%80%9A%E5%8B%A4%E5%9E%8B%E9%9B%BB%E8%81%AF%E8%BB%8A" class="mw-redirect" title="通勤型电力动车组">通勤型电力动车组</a>的双扇门，车门分布在车厢的两端，而373系是<a href="/wiki/JR" title="JR">JR集团</a>唯一使用双扇门的<a href="/wiki/%E7%89%B9%E6%80%A5" class="mw-redirect" title="特急">特急</a>车辆。由于车门与客室之间没有设置通道门，为了保持车厢内的温度，引进了半自动车门设计，在出入口的部分设置了半自动门按钮<span id="noteTag-cite_ref-sup"><sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[注 3]</a></sup></span><sup id="cite_ref-373S_6-1" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><p>驾驶座正面的驾驶窗采用<a href="/w/index.php?title=%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5%E6%B0%A3%E5%8B%9580%E7%B3%BB%E6%9F%B4%E8%81%AF%E8%BB%8A&amp;action=edit&amp;redlink=1" class="new" title="日本国铁气动80系柴油动车组（页面不存在）">气动82型柴油动车组</a>相同的全景窗<sup id="cite_ref-373D_9-0" class="reference"><a href="#cite_note-373D-9">[6]</a></sup>，在平面视景能够看见后方得视角，并且能够抑制客室照明的亮光。驾驶室与客室之间采用大型的分隔窗，能够在客室里展望前方的景物。驾驶座各部位的照明以及仪表板采用<a href="/wiki/%E9%9B%BB%E8%87%B4%E7%99%BC%E5%85%89" title="电致发光">电致发光</a>（EL），怀表的位置使用<a href="/wiki/%E7%99%BC%E5%85%89%E4%BA%8C%E6%A5%B5%E9%AB%94" class="mw-redirect" title="发光二极管">发光二极管</a>（LED），<a href="/wiki/%E6%99%82%E5%88%BB%E8%A1%A8" class="mw-redirect" title="时刻表">时刻表</a>的插槽则是使用<a href="/wiki/%E5%86%B7%E9%99%B0%E6%A5%B5%E7%AE%A1" class="mw-redirect" title="冷阴极管">冷阴极管</a><sup id="cite_ref-373S_6-2" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>客室设备</dt>\r\n</dl><p>座椅采用回转式斜倚，以每行2+2的配置方式，座椅之间的间距为970mm。每个座椅的扶手板设置了隐藏折叠式小桌以及烟灰缸<sup id="cite_ref-373A_7-1" class="reference"><a href="#cite_note-373A-7">[5]</a></sup><sup id="cite_ref-373S_6-3" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>，但是伴随着全车禁烟化后烟灰缸全面移除。由于夜间运用时没有关闭室内灯的需求，而没有设置室内灯降光器的装置。</p><p>KuMoHa373型以及SaHa373型的接近车厢尾端连结部分设有容纳四人座的半包厢（<span lang="ja">セミコンパートメント席</span>）<sup id="cite_ref-373S_6-4" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。KuHa373型设有无障碍洗手间、男性专用便盘、洗脸台以及<a href="/wiki/%E7%94%B5%E8%AF%9D%E5%8D%A1" title="电话卡">电话卡</a>式<a href="/wiki/%E5%85%AC%E5%85%B1%E9%9B%BB%E8%A9%B1" title="公共电话">公共电话</a><span id="noteTag-cite_ref-sup"><sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[注 4]</a></sup></span><sup id="cite_ref-373S_6-5" class="reference"><a href="#cite_note-373S-6">[4]</a></sup>。</p><dl>\r\n<dt>机电</dt>\r\n</dl><p>控制装置采用<a href="/wiki/%E6%9D%B1%E8%8A%9D" class="mw-redirect" title="东芝">东芝</a>制<a href="/wiki/%E8%84%88%E8%A1%9D%E5%AF%AC%E5%BA%A6%E8%AA%BF%E8%AE%8A" title="脉冲宽度调变">脉冲宽度调变</a><a href="/wiki/%E8%AE%8A%E9%A0%BB%E5%99%A8" class="mw-redirect" title="变频器">变频器</a>（VVVF），主要变换装置采用<a href="/wiki/%E5%8F%AF%E9%97%9C%E6%96%B7%E6%99%B6%E9%96%98%E7%AE%A1" title="可关断晶闸管">可关断晶闸管</a><a href="/wiki/%E5%8D%8A%E5%B0%8E%E9%AB%94%E8%A3%9D%E7%BD%AE" class="mw-redirect" title="半导体装置">半导体装置</a>（GTO）。主电动机采用C-MT66型（185kW）<a href="/w/index.php?title=%E7%B1%A0%E5%BD%A2%E4%B8%89%E7%9B%B8%E4%BA%A4%E6%B5%81%E6%84%9F%E6%87%89%E9%9B%BB%E5%8B%95%E6%A9%9F&amp;action=edit&amp;redlink=1" class="new" title="笼形三相交流感应电动机（页面不存在）">笼形三相交流感应电动机</a><sup id="cite_ref-373A_7-2" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>。</p><p><a href="/wiki/%E9%9B%86%E9%9B%BB%E5%BC%93" title="受电弓">受电弓</a>，全列车均采用C-PS27A型单臂式受电弓，设置在KuMoHa373型驾驶动力车。令373系列车可以行驶在狭窄隧道众多的身延线，而没有采用过去在净空狭小隧道所使用的“低车顶构造”车辆设计<sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[7]</a></sup>。</p><dl>\r\n<dt>转向架与制动</dt>\r\n</dl><p><a href="/wiki/%E8%BD%89%E5%90%91%E6%9E%B6" title="转向架">转向架</a>采用类似<a href="/wiki/%E6%97%A5%E6%9C%AC%E5%9C%8B%E9%90%B5211%E7%B3%BB%E9%9B%BB%E8%81%AF%E8%BB%8A" class="mw-redirect" title="日本国铁211系电力动车组">211系</a>所使用的DT50系转向架，动力车厢采用C-DT63型转向架<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[8]</a></sup>，而无动力车厢则是采用C-TR248型转向架<sup id="cite_ref-13" class="reference"><a href="#cite_note-13">[9]</a></sup>，两者皆为无枕梁转向架。与DT50系相同的的是，在桶状橡皮弹簧内的轴箱支撑装置采用听诊器型空气弹簧，并采取直接定位方式搭载枕梁。与DT50系转向架不同的是，为了防止车辆产生蛇行而装设了车厢减摆器，以及避免空转在动力车配置了砂箱。</p><p>373系的制动系统，采用<a href="/w/index.php?title=%E9%9B%BB%E5%82%B3%E6%93%8D%E7%B8%B1%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="电传操纵制动（页面不存在）">电传操纵制动</a>、<a href="/w/index.php?title=%E5%86%8D%E7%94%9F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="再生制动（页面不存在）">再生制动</a>以及<a href="/w/index.php?title=%E9%99%90%E9%80%9F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="限速制动（页面不存在）">限速制动</a><sup id="cite_ref-373B_1-2" class="reference"><a href="#cite_note-373B-1">[1]</a></sup>，为了避免在列车数量较少的区间制动失效，而同时设置<a href="/w/index.php?title=%E7%99%BC%E9%9B%BB%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="发电制动（页面不存在）">发电制动</a>。基本制动装置在动力车设置与非动力车分别设置<a href="/w/index.php?title=%E8%B8%8F%E9%9D%A2%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="踏面制动（页面不存在）">踏面制动</a>以及<a href="/w/index.php?title=%E7%A2%9F%E5%BC%8F%E5%88%B6%E8%BB%94&amp;action=edit&amp;redlink=1" class="new" title="碟式制动（页面不存在）">碟式制动</a><sup id="cite_ref-373A_7-3" class="reference"><a href="#cite_note-373A-7">[5]</a></sup>。</p><dl>\r\n<dt>保安装置</dt>\r\n</dl><p>全列车编组的保安装置采用<a href="/wiki/%E8%87%AA%E5%8B%95%E5%88%97%E8%BB%8A%E5%81%9C%E6%AD%A2%E8%A3%9D%E7%BD%AE" title="自动列车停止装置">ATS</a>-S<small>T</small><sup id="cite_ref-14" class="reference"><a href="#cite_note-14">[10]</a></sup>。在1996年3月的改点时需要服务<a href="/wiki/%E6%9D%B1%E6%97%A5%E6%9C%AC%E6%97%85%E5%AE%A2%E9%90%B5%E9%81%93" title="东日本旅客铁道">东日本旅客铁道</a>（JR东日本）所管辖的路段，因此安装了ATS-P，以对应JR东日本的讯号系统<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[11]</a></sup>。</p><dl>\r\n<dt>车内广播</dt>\r\n</dl><p>在特急列车时车内广播采用自动播报，而在普通列车、快速“月光长良”以及Home Liner的运用时则是列车长人工播报。</p>'),
(27, '维基百科', 20170101, 165555, 0, '<p><b>维基百科</b>（<span class="LangWithName">英语：<span lang="en">Wikipedia</span></span>，<span class="nowrap"><span class="noexcerpt">><sup><span class="IPA" style="color:#00e;font:bold 80% sans-serif;padding:0 .1em"><a href="/wiki/File:En-uk-Wikipedia.ogg" title="File:En-uk-Wikipedia.ogg">i</a></span></sup></span><span class="IPA nopopups"><a href="/wiki/Help:%E8%8B%B1%E8%AA%9E%E5%9C%8B%E9%9A%9B%E9%9F%B3%E6%A8%99" title="Help:英语国际音标">/<span style="border-bottom:1px dotted"><span title="/ˌ/ 后面为次重音">ˌ</span><span title="“wind”的“w”音">w</span><span title="/ɪ/ “bid”的短“i”音">ɪ</span><span title="“kind”的“k”音">k</span><span title="/ɪ/ 或 /ə/ “roses”的“e”音">ᵻ</span><span title="/ˈ/ 后面为主重音">ˈ</span><span title="“pie”的“p”音">p</span><span title="/iː/ “seed”的长“e”音">iː</span><span title="“dye”的“d”音">d</span><span title="/i/ “happy”的“y”音">i</span><span title="/ə/ “about”的“a”音">ə</span></span>/</a></span></span> 或 <span class="nowrap"><span class="noexcerpt"><sup><span class="IPA" style="color:#00e;font:bold 80% sans-serif;padding:0 .1em"><a href="/wiki/File:En-us-Wikipedia.ogg" title="File:En-us-Wikipedia.ogg">i</a></span></sup></span><span class="IPA nopopups"><a href="/wiki/Help:%E8%8B%B1%E8%AA%9E%E5%9C%8B%E9%9A%9B%E9%9F%B3%E6%A8%99" title="Help:英语国际音标">/<span style="border-bottom:1px dotted"><span title="/ˌ/ 后面为次重音">ˌ</span><span title="“wind”的“w”音">w</span><span title="/ɪ/ “bid”的短“i”音">ɪ</span><span title="“kind”的“k”音">k</span><span title="/i/ “happy”的“y”音">i</span><span title="/ˈ/ 后面为主重音">ˈ</span><span title="“pie”的“p”音">p</span><span title="/iː/ “seed”的长“e”音">iː</span><span title="“dye”的“d”音">d</span><span title="/i/ “happy”的“y”音">i</span><span title="/ə/ “about”的“a”音">ə</span></span>/</a></span></span>），是一个自由的<a href="/wiki/%E7%BD%91%E7%BB%9C%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6" title="网络百科全书">网络百科全书</a>，在一般情况下容许用户编辑其任何条目<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[4]</a></sup>。它是网络上最大型及最受大众欢迎的<a href="/wiki/%E5%B7%A5%E5%85%B7%E4%B9%A6" title="工具书">参考工具书</a><sup id="cite_ref-Woodson_5-0" class="reference"><a href="#cite_note-Woodson-5">[5]</a></sup><sup id="cite_ref-Tancer_6-0" class="reference"><a href="#cite_note-Tancer-6">[6]</a></sup><sup id="cite_ref-7" class="reference"><a href="#cite_note-7">[7]</a></sup>，并已列入十大最受欢迎的网站<sup id="cite_ref-Alexa_siteinfo_8-0" class="reference"><a href="#cite_note-Alexa_siteinfo-8">[8]</a></sup>。当前维基百科是由<a href="/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94" title="非营利组织">非营利组织</a><a href="/wiki/%E7%B6%AD%E5%9F%BA%E5%AA%92%E9%AB%94%E5%9F%BA%E9%87%91%E6%9C%83" class="mw-redirect" title="维基媒体基金会">维基媒体基金会</a>负责营运<sup id="cite_ref-9" class="reference"><a href="#cite_note-9">[9]</a></sup><sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[10]</a></sup><sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[11]</a></sup>。维基百科一字取自于本网站核心技术“Wiki”以及具有百科全书之意的“encyclopedia”共同创造出来的新混成词“Wikipedia”。 </p><!--MORE--><h2><span class="mw-headline" id=".E6.A6.82.E8.BF.B0">概述</span></h2><p>最早是在<a href="/wiki/%E5%90%89%E7%B1%B3%C2%B7%E5%A8%81%E7%88%BE%E6%96%AF" title="吉米·威尔士">吉米·威尔士</a>与<a href="/wiki/%E6%8B%89%E9%87%8C%C2%B7%E6%A1%91%E6%A0%BC" title="拉里·桑格">拉里·桑格</a>两人的合作下，在2001年1月13日于<a href="/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF" class="mw-redirect" title="互联网">互联网</a>上推出<a href="/wiki/%E7%B6%B2%E7%AB%99" title="网站">网站</a>服务，并在1月15日正式展开网络百科全书的项目<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[12]</a></sup>。其中桑格同时结合了维基百科网站合作核心的“<a href="/wiki/Wiki" title="Wiki">Wiki</a>”以及具有百科全书之意的“<a href="/wiki/Encyclopedia" class="mw-redirect" title="Encyclopedia">encyclopedia</a>”，而创造出新的<a href="/wiki/%E6%B7%B7%E6%88%90%E8%A9%9E" title="混成词">混成词</a>“Wikipedia”。创立之初，维基百科的目标是向全人类提供<a href="/wiki/%E8%87%AA%E7%94%B1" title="自由">自由</a>的百科全书，并希望各地民众能够使用自己选择的语言来参与编辑条目。其他书面印刷的百科全书多是由专家主导编辑，之后再由印刷厂商印刷之后加以销售；维基百科在性质上一如其号称般属于可自由<a href="/wiki/Help:%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91" title="Help:如何访问维基百科">访问</a>和<a href="/wiki/Help:%E7%BC%96%E8%BE%91%E9%A1%B5%E9%9D%A2" title="Help:编辑页面">编辑</a>的全球<a href="/wiki/%E7%9F%A5%E8%AD%98" class="mw-redirect" title="知识">知识</a>体，这也意味着除了传统百科全书所收录的信息外，维基百科也能够收录非学术内容、但是仍具有一定媒体关注度的动态事件。2006年《<a href="/wiki/%E6%99%82%E4%BB%A3_(%E9%9B%9C%E8%AA%8C)" title="时代 (杂志)">时代</a>》杂志所评选的<a href="/wiki/%E6%99%82%E4%BB%A3%E5%B9%B4%E5%BA%A6%E9%A2%A8%E9%9B%B2%E4%BA%BA%E7%89%A9" title="时代年度风云人物">时代年度风云人物</a>“<a href="/wiki/%E4%BD%A0_(%E6%97%B6%E4%BB%A3%E5%B9%B4%E5%BA%A6%E9%A3%8E%E4%BA%91%E4%BA%BA%E7%89%A9)" title="你 (时代年度风云人物)">你</a>”中，便提到数以百万来自世界各地的人于在线以共同协作并交互的方式促进维基百科的快速成长，同一年提及的其他重要网站还包括有<a href="/wiki/YouTube" title="YouTube">YouTube</a>、<a href="/wiki/MySpace" class="mw-redirect" title="MySpace">MySpace</a>和<a href="/wiki/Facebook" title="Facebook">Facebook</a><sup id="cite_ref-13" class="reference"><a href="#cite_note-13">[13]</a></sup>。</p><p>维基百科强调<a href="/wiki/Copyleft" title="Copyleft">Copyleft</a><a href="/wiki/%E8%87%AA%E7%94%B1%E5%85%A7%E5%AE%B9" title="自由内容">自由内容</a>、<a href="/wiki/%E5%8D%8F%E5%90%8C%E7%BC%96%E8%BE%91" title="协同编辑">协同编辑</a>（<span lang="en">Collaborative Editing</span>）以及<a href="/wiki/%E5%A4%9A%E8%AA%9E" class="mw-redirect" title="多语">多语言</a>版本的<a href="/wiki/%E7%B6%B2%E7%B5%A1%E7%99%BE%E7%A7%91%E5%85%A8%E6%9B%B8" class="mw-redirect" title="网络百科全书">网络百科全书</a>，并以<a href="/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF" class="mw-redirect" title="互联网">互联网</a>作为媒介而扩展成为一项基于<a href="/wiki/Wiki" title="Wiki">Wiki</a>技术发展的<a href="/wiki/%E4%B8%96%E7%95%8C" title="世界">世界性</a>百科全书协作计划，并由<a href="/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94" title="非营利组织">非营利</a>性质的<a href="/wiki/%E7%B6%AD%E5%9F%BA%E5%AA%92%E9%AB%94%E5%9F%BA%E9%87%91%E6%9C%83" class="mw-redirect" title="维基媒体基金会">维基媒体基金会</a>负责相关的发展事宜。维基百科是由来自世界各地的<a href="/wiki/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E7%A4%BE%E7%BE%A4" class="mw-redirect" title="维基百科社区">志愿者</a>合作编辑而成，整个项目总共收录了超过3,000万篇<a href="/wiki/Wikipedia:%E4%BB%80%E9%BA%BC%E6%98%AF%E6%A2%9D%E7%9B%AE" class="mw-redirect" title="Wikipedia:什么是条目">条目</a>，而其中<a href="/wiki/%E8%8B%B1%E8%AA%9E%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91" class="mw-redirect" title="英语维基百科">英语维基百科</a>以超过450万篇条目在数量上排名第一。维基百科允许任何访问网站的用户使用<a href="/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8" class="mw-redirect" title="网页浏览器">网页浏览器</a>自由阅览和修改绝大部标签页面的内容<sup id="cite_ref-14" class="reference"><a href="#cite_note-14">[14]</a></sup>，根据统计在维基百科上大约有35,000,000名登记注册用户<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[15]</a></sup>，其中有100,000名积极贡献者长期参与编辑工作<sup id="cite_ref-16" class="reference"><a href="#cite_note-16">[16]</a></sup>，而整个网站的总编辑次数更是超过10亿次之多<sup id="cite_ref-17" class="reference"><a href="#cite_note-17">[17]</a></sup><sup id="cite_ref-18" class="reference"><a href="#cite_note-18">[18]</a></sup>。截至2012年8月为止维基百科整个项目总共有285种各自独立运作的<a href="/wiki/Wikipedia:%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91%E8%AA%9E%E8%A8%80%E5%88%97%E8%A1%A8" class="mw-redirect" title="Wikipedia:维基百科语言列表">语言版本</a>，且已经被普遍认为是成规模最大且最为流行的网络<a href="/wiki/%E5%B7%A5%E5%85%B7%E4%B9%A6" title="工具书">工具书</a>，<a href="/wiki/%E7%99%BE%E7%A7%91" class="mw-redirect" title="百科">百科</a><sup id="cite_ref-Alexa_Internet_19-0" class="reference"><a href="#cite_note-Alexa_Internet-19">[19]</a></sup><sup id="cite_ref-20" class="reference"><a href="#cite_note-20">[20]</a></sup><sup id="cite_ref-21" class="reference"><a href="#cite_note-21">[21]</a></sup><sup id="cite_ref-22" class="reference"><a href="#cite_note-22">[22]</a></sup><sup id="cite_ref-23" class="reference"><a href="#cite_note-23">[23]</a></sup>。根据知名的<a href="/wiki/Alexa_Internet" title="Alexa Internet">Alexa Internet</a>其网络流量统计数字指出全世界总共有近3.65亿名民众使用维基百科，且维基百科也是全球浏览人数排名第六高的网站（最高纪录是排名在第五名位置），同时也是全世界最大的无<a href="/wiki/%E5%BB%A3%E5%91%8A" title="广告">广告</a>网站<sup id="cite_ref-Alexa_Internet_19-1" class="reference"><a href="#cite_note-Alexa_Internet-19">[19]</a></sup><sup id="cite_ref-Top_Sites_24-0" class="reference"><a href="#cite_note-Top_Sites-24">[24]</a></sup><sup id="cite_ref-.E6.96.AF.E5.9C.96.E7.88.BE.E7.89.B9.C2.B7.E9.9F.8B.E6.96.AF_25-0" class="reference"><a href="#cite_note-.E6.96.AF.E5.9C.96.E7.88.BE.E7.89.B9.C2.B7.E9.9F.8B.E6.96.AF-25">[25]</a></sup>。根据估计，维基百科每个月便有将近2.7亿的<a href="/wiki/%E7%BE%8E%E5%9C%8B" class="mw-redirect" title="美国">美国</a>人民前往该网站浏览<sup id="cite_ref-.E4.BA.A8.E7.89.B9.C2.B7.E6.B2.83.E5.85.8B_26-0" class="reference"><a href="#cite_note-.E4.BA.A8.E7.89.B9.C2.B7.E6.B2.83.E5.85.8B-26">[26]</a></sup>。</p><p>由于维基百科能够十分迅速整理出与最近发生事件相关的信息并且任何人都能够深入整理数据内容，使得许多人也渐渐将维基百科视为一个新闻来源<sup id="cite_ref-27" class="reference"><a href="#cite_note-27">[27]</a></sup><sup id="cite_ref-28" class="reference"><a href="#cite_note-28">[28]</a></sup>。同时为了方便一般学生或者浏览群众能够简单了解条目的内容，维基百科绝大多数的文章都会尽可能以简单的话语来解释困难的概念<sup id="cite_ref-Legal_Education_Review_29-0" class="reference"><a href="#cite_note-Legal_Education_Review-29">[29]</a></sup>。随着维基百科在社会上的普及，也陆陆续续促成了包括<a href="/wiki/%E7%B6%AD%E5%9F%BA%E6%96%B0%E8%81%9E" class="mw-redirect" title="维基新闻">维基新闻</a>、<a href="/wiki/%E7%B6%AD%E5%9F%BA%E6%95%99%E7%A7%91%E6%9B%B8" title="维基教科书">维基教科书</a>等其它姐妹项目的产生。然而尽管维基百科在其官方政策上坚决拥护<a href="/wiki/Wikipedia:%E5%8F%AF%E4%BE%9B%E6%9F%A5%E8%AD%89" title="Wikipedia:可供查证">可供查证</a>以及<a href="/wiki/Wikipedia:%E4%B8%AD%E7%AB%8B%E7%9A%84%E8%A7%80%E9%BB%9E" class="mw-redirect" title="Wikipedia:中立的观点">中立观点</a>这两项要求，维基百科仍然因为任何人都能够加入编辑的特性受到社会许多人士的批评，其中又以编辑条目的质量、信息提供的准确度、呈现态度的客观性以及无法提供一致的准确内容为多<sup id="cite_ref-30" class="reference"><a href="#cite_note-30">[30]</a></sup>。另外一部分人士指称问题在于维基百科采用了Wiki技术，这使得他们认为任何人都可以编辑维基百科内容的作法本身就是维基百科最大且无法改变的缺点<sup id="cite_ref-31" class="reference"><a href="#cite_note-31">[31]</a></sup>，在这般情况下破坏者能够轻易在易引起争纷的政治和宗教条目中添加虚构的内容、删除正确的信息或者任意添加自己的偏见<sup id="cite_ref-.E8.93.8B.E4.BC.8A.C2.B7.E6.B2.83.E7.88.BE.E7.89.B9.E6.96.AF_32-0" class="reference"><a href="#cite_note-.E8.93.8B.E4.BC.8A.C2.B7.E6.B2.83.E7.88.BE.E7.89.B9.E6.96.AF-32">[32]</a></sup>。而包括维基百科创始人<a href="/wiki/%E5%90%89%E7%B1%B3%C2%B7%E5%A8%81%E7%88%BE%E6%96%AF" title="吉米·威尔士">吉米·威尔士</a>以及英国牛津大学教授<a href="/w/index.php?title=%E5%96%AC%E7%B4%8D%E6%A3%AE%C2%B7%E9%BD%8A%E7%89%B9%E6%9E%97&amp;action=edit&amp;redlink=1" class="new" title="乔纳森·齐特林（页面不存在）">乔纳森·齐特林</a>（Jonathan Zittrain）等知识分子对于条目准确性的争议，认为在一定程度上是源自于他人对于维基百科的偏见<sup id="cite_ref-33" class="reference"><a href="#cite_note-33">[33]</a></sup><sup id="cite_ref-.E7.BE.8E.E5.9C.8B.E6.AD.B7.E5.8F.B2.E9.9B.9C.E8.AA.8C_34-0" class="reference"><a href="#cite_note-.E7.BE.8E.E5.9C.8B.E6.AD.B7.E5.8F.B2.E9.9B.9C.E8.AA.8C-34">[34]</a></sup><sup id="cite_ref-35" class="reference"><a href="#cite_note-35">[35]</a></sup>。为了尽可能解决各界对于条目质量的质疑，维基百科也陆续提出许多相对应的<a href="/wiki/Wikipedia:%E6%96%B9%E9%87%9D%E8%88%87%E6%8C%87%E5%BC%95" title="Wikipedia:方针与指引">方针与指引</a>来保障文章的质量，同时也希望协同编辑时能够列出足以供他人<a href="/wiki/Wikipedia:%E5%8F%AF%E4%BE%9B%E6%9F%A5%E8%AD%89" title="Wikipedia:可供查证">查证</a>、审核及确认的数据源。然而批评者也提到许多维基百科绝大多数大量信息都是由那些喜欢来自<a href="/wiki/%E6%B5%81%E8%A1%8C%E6%96%87%E5%8C%96" title="流行文化">流行文化</a>等事物的民众编辑自己喜爱的项目而成<sup id="cite_ref-36" class="reference"><a href="#cite_note-36">[36]</a></sup>，但这也意味着在许多情况之下网站十分容易因为各种理由而受到他人<a href="/wiki/%E7%B6%AD%E5%9F%BA%E7%99%BE%E7%A7%91%E4%B8%8A%E7%9A%84%E4%BA%BA%E7%82%BA%E7%A0%B4%E5%A3%9E" class="mw-redirect" title="维基百科上的人为破坏">人为破坏</a><sup id="cite_ref-.E4.BA.BA.E5.9B.A0.E8.88.87.E8.A8.88.E7.AE.97.E7.B3.BB.E7.B5.B1.E7.A0.94.E8.A8.8E.E6.9C.83_37-0" class="reference"><a href="#cite_note-.E4.BA.BA.E5.9B.A0.E8.88.87.E8.A8.88.E7.AE.97.E7.B3.BB.E7.B5.B1.E7.A0.94.E8.A8.8E.E6.9C.83-37">[37]</a></sup><sup id="cite_ref-.E8.A8.88.E7.AE.97.E6.A9.9F_.E5.8D.94.E6.9C.83_38-0" class="reference"><a href="#cite_note-.E8.A8.88.E7.AE.97.E6.A9.9F_.E5.8D.94.E6.9C.83-38">[38]</a></sup><sup id="cite_ref-39" class="reference"><a href="#cite_note-39">[39]</a></sup>；同时批评者也指出就算一些报告证实许多文章在遭到<a href="/wiki/%E7%A0%B4%E5%A3%9E" title="破坏">破坏</a>后往往能立即简单地被<a href="/wiki/%E6%9C%80%E8%BF%91%E6%9B%B4%E6%94%B9" class="mw-redirect" title="最近更改">删除</a>，但是维基百科内仍然包含有大量未经证实或者是相互矛盾的信息<sup id="cite_ref-Frank_Ahrens_40-0" class="reference"><a href="#cite_note-Frank_Ahrens-40">[40]</a></sup>。不过《<a href="/wiki/%E8%87%AA%E7%84%B6_(%E6%9C%9F%E5%88%8A)" title="自然 (期刊)">自然</a>》在2005年的调查之中认为维基百科在科学文章这一领域与作为传统百科全书代表的《<a href="/wiki/%E5%A4%A7%E8%8B%B1%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6" title="大英百科全书">大英百科全书</a>》有着相似的精确度，但是两者在内容上都有一定程度上的“严重缺失”<sup id="cite_ref-.E5.90.89.E5.A7.86.C2.B7.E8.B3.88.E7.88.BE.E6.96.AF_41-0" class="reference"><a href="#cite_note-.E5.90.89.E5.A7.86.C2.B7.E8.B3.88.E7.88.BE.E6.96.AF-41">[41]</a></sup><sup id="cite_ref-.E8.8B.B1.E5.9C.8B.E5.BB.A3.E6.92.AD.E5.85.AC.E5.8F.B8_42-0" class="reference"><a href="#cite_note-.E8.8B.B1.E5.9C.8B.E5.BB.A3.E6.92.AD.E5.85.AC.E5.8F.B8-42">[42]</a></sup>。</p>');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `blog_article`
--
ALTER TABLE `blog_article`
  ADD PRIMARY KEY (`ID`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `blog_article`
--
ALTER TABLE `blog_article`
  MODIFY `ID` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=28;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
